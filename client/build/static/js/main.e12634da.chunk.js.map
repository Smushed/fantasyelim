{"version":3,"sources":["constants/routes.js","componenets/Firebase/context.js","componenets/Firebase/firebase.js","componenets/Firebase/index.js","componenets/Session/withAuthorization.js","componenets/PasswordReset.js","componenets/WelcomeMessage.js","componenets/SignIn.js","componenets/SignUp.js","componenets/SignOutButton.js","componenets/Home/Leaderboard.js","componenets/Home/index.js","componenets/NavBar.js","componenets/PasswordChange.js","componenets/UserProfile.js","componenets/CreateGroup.js","componenets/UserSearch.js","componenets/GroupPage/UserList.js","componenets/GroupPage/GroupNav.js","componenets/GroupPage/index.js","componenets/DisplayPlayers.js","componenets/UsedPlayers/UsedPlayerButton.js","componenets/Roster/SearchDropdowns.js","componenets/Roster/index.js","componenets/AdminPanel/PlayerEditor.js","componenets/AdminPanel/UserEditor.js","componenets/AdminPanel/index.js","componenets/AdminPanel/UpgradeToAdmin.js","componenets/Roster/RosterButton.js","componenets/UsedPlayers/index.js","App.js","index.js"],"names":["home","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","app","currentUser","updatePassword","initializeApp","this","withAuthorization","condition","WithAuthorization","listener","onAuthStateChanged","authUser","history","push","compose","withRouter","inputStyle","width","height","initialState","error","PasswordResetFormBase","onSubmit","event","state","then","setState","Routes","catch","preventDefault","onChange","target","name","value","isInvalid","className","message","style","type","placeholder","disabled","PasswordResetLink","Link","to","Button","color","PasswordResetForm","about","fontSize","textAlign","WelcomeMessage","labelStyle","marginBottom","formStyle","display","marginLeft","marginRight","SignInFormBase","handleChange","handleSubmit","a","Form","FormGroup","Label","Input","size","SignInForm","SignInLink","SignInPage","Row","Col","xs","form","labelDescription","username","confirmPassword","redirectTo","emailValid","passwordValid","usernameValid","validMessage","SignUpFormBase","checkValidInput","firstname","lastname","axios","post","status","console","log","validateForm","invalidInputs","invalidMessages","fieldName","validCheck","match","checkPassword","length","noSpacesInPassword","checkUsername","usernameLength","passwordOne","passwordTwo","map","i","key","id","SignUpForm","SignUpLink","SignUpPage","textStyle","textDecoration","onClick","Alert","withReactContent","Swal","Leaderboard","getDataForLeaderboard","week","season","loading","get","res","userList","data","redirect","userId","redirectValue","prevProps","columns","Header","accessor","show","defaultSorted","desc","defaultPageSize","getTdProps","rowInfo","fire","title","original","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","Home","isAdmin","Container","fluid","sm","md","HomeLink","testStyle","background","backgroundColor","overflow","padding2","navLinkStyle","NavBar","Navbar","expand","Nav","navbar","NavItem","NavLink","href","initalState","passwordConfirm","PasswordChangeForm","htmlFor","buttonStyle","centerText","updateProfileStyle","header","marginTop","profileDisplayStyle","initialUpdateState","initialProfileState","dbUsername","dbEmail","dbFirstname","dbLastname","isCurrentUser","UserProfile","checkCurrentUser","userIDFromURL","userID","updatedProfile","getUserData","params","dbResponse","local","PasswordChange","UpdateInformationForm","fieldSubmitted","request","put","usernameIsInvalid","emailIsInvalid","firstnameIsInvalid","lastnameIsInvalid","groupName","groupDescription","margin","inputSize","headerStyle","descriptionStyle","CreateGroup","currentUserID","text","_id","for","formlabelStyle","forminputsize","UserSearch","userSearch","searchSelect","userArray","user","groupID","updatePage","SingleUser","addUserToGroup","componentDidMount","UserList","userlist","ButtonStyle","adminPanel","border","padding","borderRadius","GroupNav","align","outline","showMainPage","addUser","groupinfopanel","columnbackground","GroupPage","getGroupData","description","checkAdmin","filter","showPage","updateBook","groupIDFromURL","GroupInfo","DisplayPlayers","playersArray","playerPopUp","playerStats","full_name","currentPlayer","filterable","UsedPlayerButton","WeekSearch","weekSelect","customSeasonWeekSearch","TeamSearch","teamSelect","searchByTeam","PositionSearch","positionSelect","positionSearch","Roster","clearPlayers","userRoster","getRosterData","weekOnPage","seasonOnPage","sortRoster","doneLoading","err","countRoster","originalRoster","updatedRoster","originalAvailablePlayers","QBCount","RBCount","WRCount","TECount","KCount","position","tooManyPlayers","roster","filteredRoster","player","fullPlayers","mySportsId","input","inputPlaceholder","inputOptions","chosenPlayer","availablePlayers","slice","droppedPlayerIndex","availDroppedPlayerIndex","droppedPlayer","find","parseInt","splice","unshift","checkRoster","saveRosterToDb","dbReadyRoster","undefined","response","QB","RB1","RB2","Flex","WR1","WR2","TE","K","saveWithNoDrop","seasonSelect","checkLockPeriod","lockWeek","lockYear","e","searchedPosition","addDropPlayer","addOrDrop","newAvailablePlayers","newRoster","addedPlayerIndex","addedPlayer","needToSave","bind","usernameOfPage","getCurrentUsername","imageUrl","imageWidth","imageHeight","imageAlt","showConfirmButton","close","currentRoster","CurrentRosterRow","team","AvailablePlayerRow","PlayerEditor","updateNFLRoster","getMassData","getWeeklyData","UserEditor","dummyRoster","selectedUser","selectUser","calculateScores","SelectedUser","UserTable","AdminPanel","showPlayerEditor","playerEditor","userEditor","showUserEditor","UpgradeToAdmin","upgradeToAdmin","serverResponse","RosterButton","UsedPlayers","getUsedPlayers","usedPlayers","App","isSignedIn","getSeasonAndWeek","seasonAndWeek","currentSeason","currentWeek","BrowserRouter","Route","exact","path","render","SignIn","SignUp","PasswordReset","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.e12634da.chunk.js","sourcesContent":["export const home = '/';\nexport const signup = '/signup';\nexport const signin = '/signin';\nexport const userProfile = '/userprofile';\nexport const passwordReset = '/passwordreset';\nexport const passwordChange = '/passwordchange';\nexport const createGroup = '/creategroup';\nexport const discussion = '/discussion';\nexport const roster = '/roster/:userId';\nexport const adminPanel = '/adminPanel/';\nexport const usedPlayers = '/usedPlayers/:userId';\n\n\n//These are hidden routes. Ones that have no link but anyone can go to them if they'd like\nexport const upgradeToAdmin = '/upgradeToAdmin/';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire(`dotenv`).config();\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password);\n    };\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => { return this.auth.sendPasswordResetEmail(email) };\n\n    doPasswordUpdate = password => {\n        const user = app.auth().currentUser;\n        return user.updatePassword(password);\n    };\n};\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(Routes.signin);\n                    }\n                }\n            );\n        };\n\n        componentWillUnmount() {\n            this.listener();\n        };\n\n        render() {\n            return (\n                <Component {...this.props} />\n            );\n        };\n    };\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { withAuthorization } from './Session';\nimport { Button } from 'reactstrap';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\n\nconst PasswordResetPage = () => (\n    <div>\n        {/* TODO This totally doesn't work */}\n        <h3>Password Reset</h3>\n        <br />\n        <PasswordResetForm />\n    </div>\n);\n\nconst initialState = {\n    email: '',\n    error: null,\n};\n\nclass PasswordResetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initialState };\n    }\n\n    onSubmit = event => {\n        const { email } = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form className='form-horizontal'\n                onSubmit={this.onSubmit}>\n                {error && <p>{error.message}</p>}\n                <div className='form-group'>\n                    <input\n                        className='form-input'\n                        style={inputStyle}\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        type='text'\n                        placeholder='Email Address'\n                    />\n                </div>\n                <div className=\"form-group \">\n                    <div className=\"col-7\"></div>\n                    <button\n                        className=\"btn btn-primary col-1 col-mr-auto\"\n                        disabled={isInvalid}\n                        type=\"submit\">Reset Password</button>\n                </div>\n\n            </form>\n        );\n    }\n}\n\nconst PasswordResetLink = () => (\n    <Link to={Routes.passwordReset}><Button color='success'>Forgot Password?</Button></Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(PasswordResetPage);\n\nconst PasswordResetForm = compose(withRouter, withFirebase)(PasswordResetFormBase);\n\nexport { PasswordResetForm, PasswordResetLink };","import React from 'react'\n\nconst about = {\n    fontSize: '17px',\n    textAlign: 'center',\n};\n\nconst WelcomeMessage = (props) => {\n    return (\n        <p style={about}>\n            TODO\n        </p>\n    )\n};\n\nexport default WelcomeMessage;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUp';\nimport { PasswordResetLink } from './PasswordReset'\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { Row, Col, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport WelcomeMessage from './WelcomeMessage';\n\nconst inputStyle = {\n    width: '75%',\n    height: '40px',\n    fontSize: '16px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px',\n};\n\nconst formStyle = {\n    display: 'block',\n    marginLeft: '30px',\n    marginRight: 'auto',\n    fontSize: '20px'\n};\n\nconst initialState = {\n    email: '',\n    password: '',\n    error: null\n};\n\nconst SignInPage = () => (\n    <div style={formStyle}>\n        <Row>\n            <Col xs='1' />\n            <Col xs='5'>\n                <WelcomeMessage />\n            </Col>\n            <Col xs='5'>\n                <br />\n                <h3>Sign In</h3>\n                <SignInForm />\n                <SignUpLink />\n            </Col>\n            <Col xs='1' />\n        </Row>\n    </div>\n);\n\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(async () => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div >\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle} >\n                            Email:\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            type='text'\n                            name='email'\n                            placeholder='email'\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Password:\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            placeholder='password'\n                            type='password'\n                            name='password'\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Button\n                            color='primary'\n                            size='lg'\n                            disabled={isInvalid}\n                            type='submit'>\n                            Sign In\n                        </Button>\n                    </FormGroup>\n                </Form>\n                <PasswordResetLink />\n            </div >\n        );\n    };\n};\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nconst SignInLink = () => (\n    <p style={{ fontSize: '16px' }}>\n        Already have an account?\n        <Link to={Routes.signin}>\n            <Button color='success'>\n                Sign In\n            </Button>\n        </Link>\n    </p>\n);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from './Firebase';\nimport { compose } from 'recompose';\nimport axios from 'axios';\nimport { Row, Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nimport * as Routes from '../constants/routes';\nimport { SignInLink } from './SignIn';\nimport WelcomeMessage from './WelcomeMessage';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px',\n    fontSize: '16px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px',\n    fontSize: '18px'\n};\n\nconst form = {\n    display: 'block',\n    marginLeft: '50px',\n    marginRight: 'auto',\n};\n\nconst labelDescription = {\n    fontSize: '14px'\n};\n\nconst initialState = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    redirectTo: null,\n    error: null,\n    emailValid: false,\n    passwordValid: false,\n    usernameValid: false,\n    validMessage: []\n}\n\nconst SignUpPage = () => (\n    < div style={form} >\n        <Row>\n            <Col xs='1' />\n            <Col xs='5'>\n                <WelcomeMessage />\n            </Col>\n            <Col xs='5'>\n                <br />\n                <h3>SignUp</h3>\n                <SignUpForm />\n                <SignInLink />\n\n            </Col>\n            <Col xs='1' />\n        </Row>\n    </div>\n);\n\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        //Checks if all the input fields are valid\n        //If not the validation messages are shown and no user is sent to sign up\n        if (this.checkValidInput()) {\n            const { username, email, password, firstname, lastname } = this.state;\n\n            const dbResponse = await axios.post(`/api/newuser`, { username, email, firstname, lastname });\n\n            if (dbResponse.status === 200) {\n                return this.props.firebase\n                    .doCreateUserWithEmailAndPassword(email, password)\n                    .then(authUser => {\n                        //The User has been successfully authenticated, clear this component state and redirect them to the home page\n                        this.setState({ ...initialState });\n                        this.props.history.push(Routes.home);\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        this.setState({ error });\n                    });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.emailValid) {\n            invalidInputs++;\n            invalidMessages.push(`Email entered is invalid`);\n        };\n        if (!this.state.usernameValid) {\n            invalidInputs++;\n            invalidMessages.push(`Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes`);\n        };\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@']+(\\.[^<>()\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `password`:\n                let checkPassword = value.length >= 6;\n                let noSpacesInPassword = value.match(/^\\S*$/);\n                validCheck = checkPassword && noSpacesInPassword ? true : false;\n                this.setState({ passwordValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    render() {\n        const { username, email, passwordOne, passwordTwo, error, validMessage } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username.length < 3 ||\n            passwordOne < 6;\n\n        return (\n            <div className='SignupForm'>\n                <br />\n                {/* If there's an error with signup then display the error */}\n                {error && <p>{error.message}</p>}\n\n                {/* This is for checking if any of the inputs were invalid */}\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Email\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            type='text'\n                            id='email'\n                            name='email'\n                            placeholder='ex. janedoe@email.com'\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Username\n                            <br />\n                        </Label>\n                        <div style={labelDescription}>\n                            <strong>\n                                (Must be between 3 & 16 characters, no special characters & no spaces)\n                            </strong>\n                        </div>\n                        <Input\n                            style={inputStyle}\n                            placeholder='ex. JaneDoe14'\n                            type='username'\n                            name='username'\n                            value={this.state.username}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Password\n                                <br />\n                        </Label>\n                        <div style={labelDescription}>\n                            <strong>\n                                (Must be at least 6 characters with no spaces)\n                            </strong>\n                        </div>\n                        <Input\n                            style={inputStyle}\n                            placeholder='Password'\n                            type='password'\n                            name='password'\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle}>\n                            Confirm Password\n                        </Label>\n                        <Input\n                            style={inputStyle}\n                            placeholder='Confirm Password'\n                            type='password'\n                            name='confirmPassword'\n                            value={this.state.confirmPassword}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button\n                            color='primary'\n                            size='lg'\n                            disabled={isInvalid}\n                            type='submit'>\n                            Sign Up\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div >\n        )\n    };\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\n\nconst SignUpLink = () => (\n    <p style={{ fontSize: '16px' }}>\n        Don't have an account?\n        <Link to={Routes.signup}>\n            <Button color='success'>\n                Sign Up\n            </Button>\n        </Link>\n    </p>\n);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { withFirebase } from './Firebase';\n\nconst textStyle = {\n  fontSize: '25px',\n  color: 'white',\n  textDecoration: 'none',\n}\n\nconst SignOutButton = ({ firebase }) => (\n  <Button style={textStyle} color='link' onClick={firebase.doSignOut}>\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { withRouter } from 'react-router-dom';\n\nconst Alert = withReactContent(Swal);\n\nclass Leaderboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userList: [],\n            loading: false,\n        };\n    };\n\n    componentDidMount() {\n        if (typeof this.props.season !== `undefined` && this.props.season !== false) { // season here because it's the last prop we pass in. Probably not the best way\n            this.getDataForLeaderboard(this.props.week, this.props.season);\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) { // season here because it's the last prop we pass in. Probably not the best way\n            this.getDataForLeaderboard(this.props.week, this.props.season);\n        };\n    };\n\n    componentWillUnmount() {\n        //TODO Fix this when the user gets off the homepage before it loads, there is a memory leak because the leaderboard data still comes in\n        //https://codepen.io/dashtinejad/pen/Lxejpq\n    }\n\n    //Must break out these requests into individual functions so axios can do them async\n    getAllUsers() {\n        return axios.get(`/api/getAllUsers`);\n    };\n\n    getAllRosters(season) {\n        if (season === ``) {\n            return\n        }\n        return axios.get(`/api/getAllRosters/${season}`);\n    };\n\n    getDataForLeaderboard = (week, season) => {\n        this.setState({ loading: true });\n\n        //Handling if this was called too early\n        if (season === ``) { return }\n        axios.get(`/api/getLeaderboard/allUsers/`)\n            .then(res => {\n                this.setState({ loading: false, userList: res.data });\n            });\n    };\n\n    redirect = (userId) => {\n        const redirectValue = '/roster/' + userId;\n\n        this.props.history.push(redirectValue);\n    };\n\n    render() {\n        const columns = [\n            { Header: `Username`, accessor: `username`, show: true },\n            { Header: `email`, accessor: `email`, show: true },\n            { Header: `Last Week's Score`, accessor: `weekScores[${this.props.week - 1}]`, show: true },\n            { Header: `Total Score`, accessor: `totalScore`, show: true }];\n\n        const defaultSorted = [{ id: 'totalScore', desc: true }];\n        return (\n            <div>\n                <ReactTable\n                    data={this.state.userList}\n                    columns={columns}\n                    defaultSorted={defaultSorted}\n                    loading={this.state.loading}\n                    defaultPageSize={20}\n                    className=\"-highlight\"\n\n                    //TODO Enable an on click to have a pop up to view their weekly stats\n                    getTdProps={(state, rowInfo) => {\n                        return {\n                            onClick: () => {\n                                if (!rowInfo) { return };\n                                Alert.fire({\n                                    title: rowInfo.original.username,\n                                    showCancelButton: true,\n                                    confirmButtonColor: '#228B22',\n                                    cancelButtonColor: '#A9A9A9',\n                                    confirmButtonText: 'Go to their page'\n                                }).then(result => {\n                                    if (result.value) {\n                                        this.redirect(rowInfo.original.userId)\n                                        // const redirectValue = '/roster/' + rowInfo.original.userId;\n                                        // console.log(redirectValue)\n                                        // return <Redirect to={redirectValue} />\n                                    };\n                                });\n                            }\n                        };\n                    }}\n                /></div>\n        )\n    };\n};\n\nexport default withRouter(Leaderboard);\n","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from '../Session';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Row, Col } from 'reactstrap';\nimport * as Routes from '../../constants/routes';\n\nimport Leaderboard from './Leaderboard';\nimport './homeStyle.css';\n\n//Stateful component to allow the grouplist to properly populate\nclass Home extends Component {\n\n    render() {\n        const { isAdmin } = this.props;\n        return (\n            <Container fluid={true}>\n                <Row>\n                    <Col sm='12' md='3'>\n                        <div className='centerText topMargin'>\n                            {isAdmin &&\n                                <Fragment>\n                                    <Link to={Routes.adminPanel}>\n                                        Go To Admin Panel\n                                </Link>\n                                    <br />\n                                </Fragment>\n                            }\n                            <Link to={`/roster/${this.props.userId}`}>\n                                <Button color='primary' className='topMargin'>\n                                    My Roster\n                                </Button>\n                            </Link>\n                            <br />\n                            <Link to={`/usedPlayers/${this.props.userId}`}>\n                                <Button color='secondary' className='topMargin'>\n                                    Used Players\n                                </Button>\n                            </Link>\n                        </div>\n                    </Col>\n                    <Col sm='12' md='9'>\n                        <Leaderboard week={this.props.week} season={this.props.season} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    };\n};\n\nconst HomeLink = (props) => (\n    <Link to={Routes.home}>\n        <div style={props.testStyle}>\n            Home\n        </div>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);\nexport { HomeLink };","import React from 'react';\nimport '../App.css';\n\nimport * as Routes from '../constants/routes';\nimport SignOutButton from './SignOutButton';\nimport { HomeLink } from './Home';\n\nimport { Nav, Navbar, NavItem, NavLink } from 'reactstrap';\nimport { Row, Col } from 'reactstrap';\n\n\nconst background = {\n    backgroundColor: '#003366',\n    width: 'auto',\n    height: '100%',\n    overflow: 'hidden',\n};\n\nconst padding2 = {\n    textAlign: 'left',\n};\n\nconst navLinkStyle = {\n    fontSize: '25px',\n    color: 'white',\n    textDecoration: 'none',\n};\n\nconst textStyle = {\n    fontSize: '25px',\n    color: 'white',\n    textDecoration: 'none',\n};\n\nconst NavBar = (props) => {\n    return (\n        <div>\n            <header style={background}>\n                <div>\n                    <Row>\n                        <Col>\n                            <Navbar expand=\"md\">\n                                {props.authUser ? (<section>\n                                    <Nav navbar>\n                                        <NavItem >\n                                            <HomeLink testStyle={textStyle} />\n                                        </NavItem>\n                                        <NavItem >\n                                        </NavItem>\n                                        <NavItem>\n                                            <SignOutButton />\n                                        </NavItem>\n                                    </Nav>\n                                </section>\n                                ) : (\n                                        <section>\n                                            <Nav >\n                                                <NavItem >\n                                                    <HomeLink />\n                                                </NavItem>\n                                                <div style={padding2}>\n                                                    <NavItem>\n                                                        <NavLink style={navLinkStyle} href={Routes.signin}>Sign In </NavLink>\n                                                    </NavItem>\n                                                </div>\n                                                <NavItem>\n                                                    <NavLink style={navLinkStyle} href={Routes.signup}>Sign Up</NavLink>\n                                                </NavItem>\n                                            </Nav>\n                                        </section>\n                                    )\n                                }\n                            </Navbar>\n                        </Col>\n                    </Row>\n                </div>\n            </header>\n        </div >\n\n    )\n}\n\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from './Session';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\n\nconst inputStyle = {\n    width: '35%',\n    height: '40px',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n};\n\nconst labelStyle = {\n    marginBottom: '0px',\n    fontSize: '20px'\n};\n\nconst initalState = {\n    password: '',\n    passwordConfirm: '',\n    error: null,\n    passwordValid: false,\n    validMessage: []\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initalState };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        //Checks if the password they inputted is correct. If it isn't it will not submit\n        if (this.checkValidInput()) {\n            const { password } = this.state;\n\n            this.props.firebase\n                .doPasswordUpdate(password)\n                .then(() => {\n                    this.setState({ ...initalState });\n                    this.props.history.push(Routes.home);\n                })\n                .catch(error => {\n                    this.setState({ error });\n                });\n        }\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    }\n\n    //Field name to keep validation consistant, but there's only password here\n    validateForm = (fieldName, value) => {\n        let validCheck;\n        let checkPassword = value.length >= 6;\n        let noSpacesInPassword = value.match(/^\\S*$/);\n        validCheck = checkPassword && noSpacesInPassword ? true : false;\n        this.setState({ passwordValid: validCheck });\n    }\n\n    render() {\n        const { password, passwordConfirm, error, validMessage } = this.state;\n\n        const isInvalid =\n            password !== passwordConfirm || password === '';\n\n        return (\n            <div>\n                <h3>Update Password:</h3>\n                <br />\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n                <Form onSubmit={this.handleSubmit}>\n                    {error && <p>{error.message}</p>}\n                    <Label style={labelStyle} htmlFor='password'>New Password:</Label>\n                    <FormGroup>\n                        <Input\n                            style={inputStyle}\n                            name='password'\n                            value={password}\n                            onChange={this.handleChange}\n                            type='password'\n                            placeholder='New Password'\n                        />\n                    </FormGroup>\n\n                    <Label style={labelStyle} htmlFor='passwordConfirm'>Confirm Password:</Label>\n                    <FormGroup>\n                        <Input\n                            style={inputStyle}\n                            name='passwordConfirm'\n                            value={passwordConfirm}\n                            onChange={this.handleChange}\n                            type='password'\n                            placeholder='Confirm New Password'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Button\n                            color='primary'\n                            disabled={isInvalid}\n                            type='submit'>\n                            Update Password\n                            </Button>\n                    </FormGroup>\n\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(compose(withRouter, withFirebase)(PasswordChangeForm));","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport PasswordChangeForm from './PasswordChange';\nimport axios from 'axios';\nimport { Button, Label, Input, } from \"reactstrap\";\n\nconst inputStyle = {\n    width: '35%',\n    height: '40px',\n    fontSize: '16px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '10px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nconst buttonStyle = {\n    marginBottom: '25px'\n};\n\nconst centerText = {\n    textAlign: 'center'\n};\n\nconst updateProfileStyle = {\n    fontSize: '20px'\n};\n\nconst header = {\n    marginTop: '25px',\n}\n\nconst profileDisplayStyle = {\n    fontSize: '16px'\n};\n\nconst initialUpdateState = {\n    username: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    emailValid: false,\n    usernameValid: false,\n    validMessage: ''\n};\n\nconst initialProfileState = {\n    dbUsername: '',\n    dbEmail: '',\n    dbFirstname: '',\n    dbLastname: '',\n    isCurrentUser: false\n};\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props)\n\n        //Listed twice as to not change the info on the profile when they begin updating it\n        this.state = { ...initialProfileState };\n    };\n\n    componentDidMount() {\n        const userID = this.props.match.params.userID;\n        this.getUserData(userID);\n        this.checkCurrentUser(userID);\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID || this.props.userID !== prevProps.userID) {\n            const userID = this.props.match.params.userID;\n            this.getUserData(userID);\n            this.checkCurrentUser(userID);\n        };\n    };\n\n    checkCurrentUser = (userIDFromURL) => {\n        if (this.props.userID === userIDFromURL) {\n            this.setState({\n                isCurrentUser: true\n            })\n        };\n    };\n\n    updatedProfile = () => {\n        this.getUserData(this.props.match.params.userID);\n    };\n\n    getUserData = async (userID) => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                dbUsername: dbResponse.data.local.username,\n                dbEmail: dbResponse.data.local.email,\n                dbFirstname: dbResponse.data.local.firstname,\n                dbLastname: dbResponse.data.local.lastname,\n            });\n        };\n    };\n\n    render() {\n        const { isCurrentUser, dbUsername, dbEmail, dbFirstname, dbLastname } = this.state;\n\n        return (\n            <div style={centerText}>\n                <h1 style={header}>{dbUsername}'s Profile</h1>\n                <div style={profileDisplayStyle}>Username: {dbUsername}</div>\n                <div style={profileDisplayStyle}>Email: {dbEmail}</div>\n                <div style={profileDisplayStyle}>Firstname: {dbFirstname}</div>\n                <div style={profileDisplayStyle}>Lastname: {dbLastname}</div>\n\n                {/* If the user is the current user logged in they can update their profile here */}\n                {isCurrentUser &&\n                    <Fragment>\n                        <UpdateInformationForm userID={this.props.userID} updatedProfile={this.updatedProfile} />\n                        <br />\n                        <PasswordChangeForm />\n                    </Fragment>\n                }\n            </div>\n        );\n    };\n};\n\nclass UpdateInformationForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { ...initialUpdateState };\n    };\n\n    handleSubmit = async (fieldSubmitted) => {\n\n        if (this.checkValidInput(fieldSubmitted)) {\n            const value = this.state[fieldSubmitted];\n            const userID = this.props.userID;\n            const request = fieldSubmitted;\n\n            const dbResponse = await axios.put(`/api/updateuser`, { userID, value, request });\n\n            if (dbResponse.status === 200) {\n                this.props.updatedProfile();\n                this.setState({ ...initialUpdateState });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    checkValidInput = (fieldSubmitted) => {\n        if (fieldSubmitted === 'email' && !this.state.emailValid) {\n            this.setState({ validMessage: `Email entered is invalid` });\n            return false;\n        };\n\n        if (fieldSubmitted === 'username' && !this.state.usernameValid) {\n            this.setState({ validMessage: `Please ensure username is between 3 & 16 characters & it only contains letters, numbers, underscores & dashes` });\n            return false;\n        };\n\n        return true;\n    };\n\n    render() {\n        const { username, email, firstname, lastname, validMessage } = this.state;\n\n        const usernameIsInvalid = username === '';\n        const emailIsInvalid = email === '';\n        const firstnameIsInvalid = firstname === '';\n        const lastnameIsInvalid = lastname === '';\n\n        return (\n            <div style={updateProfileStyle}>\n                {validMessage && <p>{validMessage}</p>}\n                <br />\n                <Label style={labelStyle}>\n                    Username:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='username'\n                    placeholder='Update Username'\n                    value={username}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={usernameIsInvalid}\n                    onClick={() => this.handleSubmit('username')}>\n                    Update Username\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    Email:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='email'\n                    placeholder='Update Email'\n                    value={email}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={emailIsInvalid}\n                    onClick={() => this.handleSubmit('email')}>\n                    Update Email\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    First Name:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='firstname'\n                    placeholder='Update Firstname'\n                    value={firstname}\n                    onChange={this.handleChange}></Input>\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={firstnameIsInvalid}\n                    onClick={() => this.handleSubmit('firstname')}>\n                    Update Firstname\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    Last Name:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='lastname'\n                    placeholder='Update Lastname'\n                    value={lastname}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={lastnameIsInvalid}\n                    onClick={() => this.handleSubmit('lastname')}>\n                    Update Lastname\n                </Button>\n                <hr />\n            </div >\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserProfile);","import React, { Component } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\n//Using Swal to display message when group is created\nconst Alert = withReactContent(Swal);\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nconst initialState = {\n    groupName: '',\n    groupDescription: '',\n    error: null\n};\n\nconst navLinkStyle = {\n    fontSize: '25px',\n    color: 'white',\n    textDecoration: 'none',\n}\n\nconst formStyle = {\n    fontSize: '25px',\n    width: '50%',\n    textAlign: 'center',\n    margin: '0 auto'\n};\n\nconst inputSize = {\n    fontSize: '20px',\n};\n\nconst headerStyle = {\n    textAlign: 'center',\n    marginBottom: '25px'\n};\n\nconst descriptionStyle = {\n    fontSize: '20px',\n    height: '200px'\n};\n\n\nclass CreateGroup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const currentUserID = this.props.userID;\n\n        const { groupName, groupDescription } = this.state;\n\n        const dbResponse = await axios.post(`/api/creategroup`, { currentUserID, groupName, groupDescription });\n\n        Alert.fire({\n            type: `success`,\n            title: `${groupName} Created!`,\n            text: `Taking you to the club page. Why don't you pick a book or add a user?`\n        });\n\n        this.props.history.push(`/group/${dbResponse.data._id}`);\n    };\n\n    render() {\n        const { groupName, groupDescription, error } = this.state;\n\n        const isInvalid = groupName === '' || groupDescription === '';\n\n        return (\n            <div>\n                <h2 style={headerStyle}>Create your group!</h2>\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <Form style={formStyle} onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle} htmlFor='groupName' for='text'> Group Name: </Label>\n                        <Input\n                            style={inputSize}\n                            type='text'\n                            name='groupName'\n\n                            placeholder='Enter A Group Name'\n                            value={this.state.groupName}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label style={labelStyle} htmlFor='groupDescription' for='text'>Enter A Group Description: </Label>\n                        <Input\n                            style={descriptionStyle}\n                            type='textarea'\n                            name='groupDescription'\n                            placeholder='Description'\n                            value={this.state.groupDescription}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n                    <Button\n                        color='primary'\n                        size='lg'\n                        disabled={isInvalid}\n                        type='submit'\n                    >Create New Group\n                    </Button>\n\n                </Form>\n            </div>\n\n\n        );\n    };\n};\n\nconst CreateGroupLink = () => (\n    <Link to={Routes.createGroup}>\n        <button style={navLinkStyle} className='btn btn-link'>Create Group</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(CreateGroup);\n\nexport { CreateGroupLink };","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Button, Form, FormGroup, Label, Input, } from 'reactstrap';\n\n//Using Swal to display messages when submit button is hit\nconst Alert = withReactContent(Swal);\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\n\nconst formlabelStyle = {\n    fontSize: '25px'\n};\n\nconst forminputsize = {\n    fontSize: '20px'\n};\n\nclass UserSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userSearch: '',\n            error: null,\n            userArray: [],\n            searchSelect: ''\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { userSearch, searchSelect } = this.state;\n\n        const dbResponse = await axios.get(`/api/usersearch/${userSearch}/${searchSelect}`);\n\n        this.setState({ userArray: dbResponse.data });\n    }\n\n    render() {\n        const { userSearch, error, userArray, searchSelect } = this.state;\n        const isInvalid = userSearch === '' || searchSelect === '';\n\n        return (\n\n            <div>\n                {error && <p>{error}</p>}\n                <Form style={formlabelStyle} onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label style={labelStyle} for=\"text\"> Search By:</Label>\n                        <Input style={forminputsize} type='select' name='searchSelect' id=\"searchSelection\" value={this.state.searchSelect}\n                            onChange={this.handleChange}>\n                            <option value=''> </option>\n                            <option value='email'>Email</option>\n                            <option value='username'>Username</option>\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label style={labelStyle} htmlFor='userSearch' for=\"text\"> Search Users:</Label>\n                        <Input style={forminputsize} type='text' name='userSearch' id=\"exampleEmail\" placeholder='Search User' value={this.state.userSearch}\n                            onChange={this.handleChange} />\n                    </FormGroup>\n\n                    <Button color=\"secondary\" size=\"lg\" disabled={isInvalid}\n                        type='submit'>Search User</Button>\n                </Form>\n\n                {userArray && userArray.map((user, i) => <SingleUser user={user} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n            </div>\n\n\n\n\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleUser extends Component {\n\n    addUserToGroup = async (event) => {\n        const { isAdmin, groupID } = this.props;\n        const { userID, username } = this.props.user;\n        const dbResponse = await axios.put(`/api/addusertogroup`, { isAdmin, groupID, userID });\n\n        if (dbResponse.status === 200) {\n            Alert.fire({\n                type: 'success',\n                title: `${username} Added!`,\n                text: 'Sending you back to the club page'\n            });\n            this.props.updatePage(`main`);\n        };\n    };\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { isAdmin } = this.props;\n        const { email, username } = this.props.user;\n\n        return (\n            <div className='userCard'>\n                <div>Email: {email}</div>\n                <div>Username: {username}</div>\n\n                {isAdmin && <button className='btn btn-primary' onClick={this.addUserToGroup}>Add User To Group</button>}\n            </div>\n        );\n    };\n};\n\nexport default UserSearch;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst UserList = (props) => {\n    return (\n        <Fragment>\n            <h2 >Group Members</h2>\n            <div>\n                {props.userlist.map((user, i) => <Link to={`/user/${user._id}`} key={i}><SingleUser userID={user._id} key={user._id} /></Link>)}\n            </div>\n            <br />\n        </Fragment>\n    );\n};\n\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null\n        };\n    };\n\n    componentDidMount = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username });\n        } else {\n            this.setState({ error: dbResponse.data });\n        };\n    };\n\n    render() {\n        return (\n            <div>{this.state.username}</div>\n        );\n    };\n};\n\n\n\nexport default UserList;","import React from 'react';\nimport { Button } from 'reactstrap';\n\nconst ButtonStyle = {\n    fontSize: '17px',\n};\n\nconst adminPanel = {\n    textAlign: 'center',\n    fontSize: '25px',\n    border: '1px solid grey',\n    padding: '10px',\n    marginBottom: '25px',\n    marginTop: '25px',\n    borderRadius: '5px'\n};\n\nconst GroupNav = (props) => {\n    return (\n        <div style={adminPanel} align='center' >\n            Admin Panel\n                <hr></hr>\n            <Button outline color='primary' style={ButtonStyle} onClick={() => props.updatePage('main')}>Show Club Page</Button>\n            <Button outline color='primary' style={ButtonStyle} onClick={() => props.updatePage('updateBook')}>Update Book</Button>\n            <Button outline color='primary' style={ButtonStyle} onClick={() => props.updatePage('addUser')}>Add User</Button>\n        </div>\n    )\n}\n\nexport default GroupNav;","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n\nimport UserSearch from '../UserSearch';\nimport UserList from './UserList';\nimport GroupNav from './GroupNav';\nimport { Row, Col } from 'reactstrap';\n\n//Initializes all the data we need for the group as well as what should display on the app\nconst initialState = {\n  groupID: 0,\n  groupName: '',\n  groupDescription: '',\n  userlist: [],\n  isAdmin: false,\n  error: null,\n  showMainPage: true,\n  addUser: false\n};\n\nconst groupinfopanel = {\n  textAlign: 'center',\n  fontSize: '50px',\n\n  padding: '10px',\n  marginBottom: '30px'\n};\n\nconst columnbackground = {\n  fontSize: '30px',\n  padding: '10px',\n  marginBottom: '50px',\n  textAlign: 'center'\n};\n\nclass GroupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...initialState };\n  }\n\n  componentDidMount() {\n    const groupIDFromURL = this.props.match.params.groupID;\n    if (typeof groupIDFromURL !== 'undefined') {\n      this.getGroupData(groupIDFromURL);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userID !== prevProps.userID) {\n      const groupID = this.props.match.params.groupID;\n      this.getGroupData(groupID);\n    }\n  }\n\n  getGroupData = async groupID => {\n    const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n    if (dbResponse.status === 200) {\n      this.setState(\n        {\n          groupID: dbResponse.data._id,\n          groupName: dbResponse.data.name,\n          groupDescription: dbResponse.data.description,\n          userlist: dbResponse.data.userlist,\n        },\n        () => {\n          //If statement incase the componentDidMount happens first\n          if (this.props.userID) {\n            this.checkAdmin();\n          }\n        }\n      );\n    } else {\n      //TODO Check Error message\n      this.setState({\n        error: dbResponse.data.error\n      });\n    }\n  };\n\n  checkAdmin = () => {\n    const { userlist } = this.state;\n    const currentUserID = this.props.userID;\n\n    const currentUser = userlist.filter(user => user._id === currentUserID);\n    if (currentUser[0].isAdmin) {\n      this.setState({\n        isAdmin: true\n      });\n    }\n  };\n\n  //Toggles the page based on what the user chooses to see\n  updatePage = showPage => {\n    switch (showPage) {\n      case 'main':\n        this.setState({\n          showMainPage: true,\n          updateBook: false,\n          addUser: false\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      case 'updateBook':\n        this.setState({\n          showMainPage: false,\n          updateBook: true,\n          addUser: false\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      case 'addUser':\n        this.setState({\n          showMainPage: false,\n          updateBook: false,\n          addUser: true\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const { groupID, groupName, groupDescription, userlist, error, isAdmin, addUser } = this.state;\n\n    return (\n      <div>\n        <Row>\n          <Col xs='6'>\n            {error && <p>{error.message}</p>}\n            {isAdmin &&\n              <Row>\n                <Col xs='3' />\n                <Col xs='6'>\n                  <GroupNav updatePage={this.updatePage} />\n                </Col>\n                <Col xs='3' />\n              </Row>\n            }\n            <div style={columnbackground}>\n              <UserList userlist={userlist} />\n            </div>\n          </Col>\n\n          <Col xs='6'>\n            <div style={groupinfopanel}>\n              <GroupInfo\n                groupName={groupName}\n                groupDescription={groupDescription}\n              />\n            </div>\n\n            {addUser && (\n              <UserSearch\n                groupID={groupID}\n                isAdmin={isAdmin}\n                updatePage={this.updatePage}\n              />\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  };\n};\n\nconst GroupInfo = props => {\n  return (\n    <Fragment>\n      <strong>{props.groupName}</strong>\n\n      <br />\n      <h3>{props.groupDescription}</h3>\n    </Fragment>\n  );\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(GroupPage);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\n//Using Swal to display messages when a row is clicked for a player\nconst Alert = withReactContent(Swal);\n\nclass DisplayPlayers extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playersArray: [],\n            loading: true,\n            currentPlayer: {}\n        };\n    };\n\n    componentDidMount = async () => {\n        const dbResponse = await axios.get(`/api/displayplayers`);\n\n        if (dbResponse) {\n            this.setState({\n                playersArray: dbResponse.data,\n                loading: false\n            })\n        }\n    };\n\n    playerPopUp = (playerStats) => {\n        Alert.fire({\n            text: `Do you want to add ${playerStats.full_name} to your roster?`,\n            showCancelButton: true\n        })\n    }\n\n    render() {\n        const columns = [\n            { Header: 'Full Name', accessor: 'full_name', show: true },\n            { Header: 'Position', accessor: 'position', show: true },\n            { Header: 'Team', accessor: 'team', show: true }];\n\n        const { loading } = this.state;\n        return (\n            <div>\n\n                {/* TODO React Table Package might be good */}\n                <br />\n                {this.state.playersArray ? (\n                    <ReactTable\n                        data={this.state.playersArray}\n                        columns={columns}\n                        loading={loading}\n                        filterable\n                        defaultPageSize={20}\n                        className=\"-highlight\"\n                        getTdProps={(state, rowInfo) => {\n                            return {\n                                onClick: () => {\n                                    this.playerPopUp(rowInfo.original)\n                                    console.log('It was this mySportsId:', rowInfo.original)\n                                }\n                            }\n                        }}\n                    />\n                ) : (\n                        <div>\n                            Nothing\n                        </div>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default DisplayPlayers;","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\n\nclass UsedPlayerButton extends Component {\n\n    redirect = () => {\n        const redirectValue = '/usedPlayers/' + this.props.userId;\n\n        this.props.history.push(redirectValue);\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Button color='info' onClick={this.redirect}>\n                    View {this.props.username}'s Used Players\n                </Button>\n            </div>\n        );\n    };\n};\n\nexport default withRouter(UsedPlayerButton);","import React from 'react';\r\nimport { Label, Input, Button } from 'reactstrap';\r\n\r\n\r\nconst WeekSearch = (props) => (\r\n    <div className='selectContainer'>\r\n        <Label for='weekSelect'>Select Week</Label>\r\n        <div className='secondRowInput'>\r\n            <Input value={props.weekSelect} type='select' name='weekSelect' id='weekSelect' className='searchDropdown' onChange={props.handleChange}>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n                <option>13</option>\r\n                <option>14</option>\r\n                <option>15</option>\r\n                <option>16</option>\r\n                <option>17</option>\r\n            </Input>\r\n        </div>\r\n        <Button color='primary' onClick={props.customSeasonWeekSearch} className='submitButton'>\r\n            Search\r\n    </Button>\r\n    </div>\r\n);\r\n\r\nconst TeamSearch = (props) => (\r\n    <div className='selectContainer'>\r\n        <Label for='teamSelect'>\r\n            Search For Players By Team\r\n        </Label>\r\n        <div className='inputContainer secondRowInput'>\r\n            <Input value={props.teamSelect} type='select' name='teamSelect' id='teamSelect' className='searchDropdown' onChange={props.handleChange}>\r\n                <option>ARI</option>\r\n                <option>ATL</option>\r\n                <option>BAL</option>\r\n                <option>BUF</option>\r\n                <option>CAR</option>\r\n                <option>CHI</option>\r\n                <option>CIN</option>\r\n                <option>CLE</option>\r\n                <option>DAL</option>\r\n                <option>DEN</option>\r\n                <option>DET</option>\r\n                <option>GB</option>\r\n                <option>HOU</option>\r\n                <option>IND</option>\r\n                <option>JAX</option>\r\n                <option>KC</option>\r\n                <option>LAC</option>\r\n                <option>LA</option>\r\n                <option>MIA</option>\r\n                <option>MIN</option>\r\n                <option>NE</option>\r\n                <option>NO</option>\r\n                <option>NYG</option>\r\n                <option>NYJ</option>\r\n                <option>OAK</option>\r\n                <option>PHI</option>\r\n                <option>PIT</option>\r\n                <option>SEA</option>\r\n                <option>SF</option>\r\n                <option>TB</option>\r\n                <option>TEN</option>\r\n                <option>WAS</option>\r\n            </Input>\r\n        </div>\r\n        <Button color=\"primary\" onClick={props.searchByTeam} className='submitButton'>\r\n            Search\r\n        </Button>\r\n    </div>\r\n);\r\n\r\nconst PositionSearch = (props) => (\r\n    <div className='selectContainer'>\r\n        <Label for='positionSelect'>Search Available Players By Position</Label>\r\n        <div className='secondRowInput'>\r\n            <Input value={props.positionSelect} type='select' name='positionSelect' id='positionSelect' className='searchDropdown' onChange={props.handleChange}>\r\n                <option>QB</option>\r\n                <option>RB</option>\r\n                <option>WR</option>\r\n                <option>TE</option>\r\n                <option>K</option>\r\n            </Input>\r\n        </div>\r\n        <Button color='primary' onClick={props.positionSearch} className='submitButton'>\r\n            Search\r\n    </Button>\r\n    </div>\r\n);\r\n\r\n\r\nexport { PositionSearch, TeamSearch, WeekSearch };","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Container, Button, Row, Col } from 'reactstrap';\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport './rosterStyle.css';\nimport './playerStyle.css';\n\nimport UsedPlayerButton from '../UsedPlayers/UsedPlayerButton';\nimport { WeekSearch, PositionSearch, TeamSearch } from './SearchDropdowns';\n\nconst Alert = withReactContent(Swal);\n\nclass Roster extends Component {\n    constructor(props) {\n        super(props);\n        //Must set state hard here to ensure that it is loaded properly when the component unmounts and remounts±\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            userRoster: [],\n            availablePlayers: [],\n            positionSelect: `QB`, //This is the default value for the position search\n            teamSelect: `ARI`,\n            weekSelect: 0,\n            seasonSelect: 0,\n            weekOnPage: 0, //The week and season are here when the player searches for their roster. This updates ONLY when the player actually refreshes their roster\n            seasonOnPage: ``,\n            currentUser: false,\n            usernameOfPage: '',\n            dbReadyRoster: { //We populate this when we go to sort the user's roster. This is the way it's saved into the database\n                QB: 0,\n                RB1: 0,\n                RB2: 0,\n                WR1: 0,\n                WR2: 0,\n                Flex: 0,\n                TE: 0,\n                K: 0\n            }\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.week !== 0 && this.props.season !== '') {\n            this.setState({ weekSelect: this.props.week, seasonSelect: this.props.season });\n            this.getRosterData(this.props.week, this.props.season);\n            this.checkCurrentUser();\n            this.getCurrentUsername();\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) { // season here because it's the last prop we pass in. Probably not the best way\n            this.setState({ weekSelect: this.props.week, seasonSelect: this.props.season });\n            this.getRosterData(this.props.week, this.props.season);\n            this.checkCurrentUser();\n            this.getCurrentUsername();\n        };\n    };\n\n    getCurrentUsername() {\n        axios.get(`/api/getUserById/${this.props.match.params.userId}`)\n            .then(res => {\n                this.setState({ usernameOfPage: res.data.local.username })\n            }).catch(err => {\n                console.log(err); //TODO better error handling\n            });\n    };\n\n    checkCurrentUser() {\n        if (this.props.userId === this.props.match.params.userId) {\n            this.setState({ currentUser: true });\n        } else {\n            this.setState({ currentUser: false });\n        };\n    };\n\n    //We define loading and done loading here to have swal pop ups whenever we are pulling in data so the user can't mess with data while it's in a loading state\n    loading() {\n        Alert.fire({\n            title: 'Loading',\n            text: 'Loading available players',\n            imageUrl: 'https://media.giphy.com/media/3o7aDczpCChShEG27S/giphy.gif',\n            imageWidth: 200,\n            imageHeight: 200,\n            imageAlt: 'Loading Football',\n            showConfirmButton: false,\n            showCancelButton: false\n        });\n    };\n\n    doneLoading() {\n        Alert.close()\n    };\n\n    clearPlayers = () => {\n        //Gets rid of all the players that are sitting in state when the user goes to another week\n        let { userRoster } = this.state;\n\n        userRoster = [];\n\n        this.setState({ userRoster });\n    };\n\n    getRosterData = (week, season) => {\n\n        this.loading();\n        this.setState({ weekOnPage: week, seasonOnPage: season })\n        //We want to go and grab the roster no matter what\n        //This is in case another user comes to the profile and wants to view their picks\n        //We pass in a params along with the API call stating if this is the current user or not\n        if (this.props.week !== 0 && this.props.season !== ``) {\n            //Inside here after the current roster is hit, then go in and pull the other data\n            //Make the pull available players easily hit from other places as well, since I want a dropdown that defaults to this week\n            //But can be changed in case people want to update more than just this week at once.\n            axios.get(`/api/userRoster/${this.props.match.params.userId}`,\n                { params: { week, season } })\n                .then(res => {\n                    this.setState({ userRoster: res.data });\n                    this.sortRoster(res.data);\n                    this.doneLoading();\n                }).catch(err => {\n                    console.log(`roster data error`, err); //TODO better error handling\n                });\n        };\n    };\n\n    //This is to check if the player has too many of a certain position on their roster\n    countRoster = (originalRoster, updatedRoster, originalAvailablePlayers) => {\n        let QBCount = 0;\n        let RBCount = 0;\n        let WRCount = 0;\n        let TECount = 0;\n        let KCount = 0;\n\n        //We then go through the current user roster and populate it with data to sort it and get all the players\n        for (let i = 0; i < updatedRoster.length; i++) {\n            const position = updatedRoster[i].position;\n            //For the RB And WR positions, there are three options each they can be in\n            //RB/WR 1 & 2 as well as a flex position. All of which are undefined because we cannot have duplicate keys in an object\n            //We use a switch statement for WR and RB and start pulling the data into the fake roster\n            if (position === `RB`) {\n                RBCount++;\n            } else if (position === `WR`) {\n                WRCount++;\n            } else if (position === `QB`) {\n                QBCount++;\n            } else if (position === `TE`) {\n                TECount++;\n            } else if (position === `K`) {\n                KCount++;\n            };\n        };\n\n        //Checks if any positions have too many on the roster then feed the data into the function to handle this\n        //Probably a bettwe way to do this, but unsure of how.\n        //Also need to feed in the originalRoster in case the player cancels out and we are to reload the original state\n        if (QBCount > 1) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `QB`, originalAvailablePlayers);\n            return false; //Return false here because we are splitting and handling this with the tooManyPlayers and no longer need to save it in the onDragEnd\n        } else if (WRCount > 3) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `WR`, originalAvailablePlayers);\n            return false;\n        } else if (RBCount > 3) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `RB`, originalAvailablePlayers);\n            return false;\n        } else if (RBCount + WRCount > 5) {\n            //Here we want the WR or RB to be over three. If they already have 3 on their roster, it means that one is already in their flex\n            //If they only have two then they can sub one of the other positions and put it in their flex\n            this.tooManyPlayers(originalRoster, updatedRoster, `Flex`, originalAvailablePlayers);\n            return false;\n        } else if (TECount > 1) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `TE`, originalAvailablePlayers);\n            return false;\n        } else if (KCount > 1) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `K`, originalAvailablePlayers);\n            return false;\n        };\n        return true;\n    };\n\n    tooManyPlayers = async (originalRoster, roster, position, originalAvailablePlayers) => {\n        //Pull out all the players for the position that has too many in it right now\n        let filteredRoster = [];\n        if (position === `Flex`) {\n            //If the position is flex, that means there are two of the current position and they can either swap it for RB or console.warn();\n            filteredRoster = roster.filter(player => player.position === `RB` || player.position === `WR`);\n        } else {\n            filteredRoster = roster.filter(player => player.position === position);\n        };\n\n        //Iterate over the filtered array and get the full data for the players to give the user a choice\n        //We need it in this format so swal will properly list the options\n        const fullPlayers = {};\n\n        for (let i = 0; i < filteredRoster.length; i++) {\n            //First we have to initialize the object because of the bracket notation\n            fullPlayers[filteredRoster[i].mySportsId] = {};\n            //THen we populate the full name from the state to give the player the chance to pick between the one they just added and the player on their roster\n            fullPlayers[filteredRoster[i].mySportsId] = filteredRoster[i].full_name;\n        };\n\n        //chosenPlayer === the player the user would like to be dropped\n        const { value: chosenPlayer } = await Alert.fire({\n            title: `Too many ${position}s`,\n            input: `select`,\n            inputPlaceholder: `Which player do you want to drop?`,\n            inputOptions: fullPlayers,\n            showCancelButton: true,\n        });\n\n        //If the player responded with the player they would like to drop then we will take them out of their current array and then set the new state\n        if (chosenPlayer) {\n            const availablePlayers = originalAvailablePlayers.slice(0);\n            let droppedPlayerIndex = 0;\n            let availDroppedPlayerIndex = -1;\n\n            const droppedPlayer = roster.find((player, i) => {\n                if (player.mySportsId === parseInt(chosenPlayer)) {\n                    droppedPlayerIndex = i;\n                    return player;\n                };\n            });\n\n            availablePlayers.find((player, i) => {\n                if (player.mySportsId === parseInt(chosenPlayer)) {\n                    availDroppedPlayerIndex = i;\n                };\n            });\n\n            //Remove the player they chose from the array and then save it down into state\n            if (availDroppedPlayerIndex >= 0) {\n                availablePlayers.splice(availDroppedPlayerIndex, 1);\n            };\n            roster.splice(droppedPlayerIndex, 1);\n            //Add the player they dropped back to the available list of players\n            if (droppedPlayer.position === this.state.positionSelect) {\n                availablePlayers.unshift(droppedPlayer);\n            };\n\n            //Now we make one final check before moving things along. If everything is done right above this should be simple.\n            const checkRoster = this.checkRoster(roster);\n\n            //If the check failed, then we will have an issue and are going to revert the state back to the previous point\n            if (checkRoster) {\n                //We take the array of player IDs that are on the user roster and sort them\n                //SortRoster also saves down dbReadyRoster so we should be good to save it below\n                this.sortRoster(roster);\n\n                //Here we feed the new sorted array along with the player to be deleted from the old array. The state is updated in the sortRoster function\n                //We need to new array to get the new player added and the old player so we can pull them out of the usedPlayersArray in the DB\n                this.saveRosterToDb(this.state.dbReadyRoster, chosenPlayer, false);\n\n                this.setState({ availablePlayers, userRoster: roster });\n            } else {\n                Alert.fire({\n                    type: 'warning',\n                    title: 'Roster Save Error!',\n                    text: 'Something went wrong with saving your roster! Please refresh and try again',\n                    confirmButtonColor: '#3085d6',\n                    confirmButtonText: 'Take me back'\n                });\n                this.setState({ userRoster: originalRoster });\n            };\n        } else if (chosenPlayer === undefined) {\n            //This is if the player has chosen to cancel out of the box above. We reload the old state to remove the player they just added\n            this.setState({ userRoster: originalRoster, availablePlayers: originalAvailablePlayers });\n        } else {\n            //This is if the player doesn't select one of the players and just presses accept\n            await Alert.fire(`You must pick one or cancel`)\n            this.tooManyPlayers(originalRoster, roster, position, originalAvailablePlayers);\n        };\n    };\n\n    checkRoster = (roster) => {\n        //This is a true false check to verify the roster data before saving it to the database\n        let response = true;\n        let QBCount = 0;\n        let RBCount = 0;\n        let WRCount = 0;\n        let TECount = 0;\n        let KCount = 0;\n\n        //We then go through the current user roster and populate it with data to sort it and get all the players\n        for (let i = 0; i < roster.length; i++) {\n            const position = roster[i].position;\n            //For the RB And WR positions, there are three options each they can be in\n            //RB/WR 1 & 2 as well as a flex position. All of which are undefined because we cannot have duplicate keys in an object\n            //We use a switch statement for WR and RB and start pulling the data into the fake roster\n            if (position === `RB`) {\n                RBCount++;\n            } else if (position === `WR`) {\n                WRCount++;\n            } else if (position === `QB`) {\n                QBCount++;\n            } else if (position === `TE`) {\n                TECount++;\n            } else if (position === `K`) {\n                KCount++;\n            };\n        };\n\n        //This checks if the player has too many of any one position or if their overall roster is over 8\n        if (QBCount > 1 || RBCount > 3 || WRCount > 3 || (RBCount + WRCount) > 5 || TECount > 1 || KCount > 1 || roster.length > 8) {\n            response = false;\n        };\n\n        return response;\n    };\n\n    sortRoster = (roster) => {\n        //While we are sorting the roster we are also getting the object ready to be stored in the database\n        //This sortRoster will be run before we ever go to save anything into the DB so it should populate the state correctly when we go to put it in\n        const dbReadyRoster = {}; //It's saved as an object in the database\n\n        //Here we iterate through the roster of the player and put them into an object for the order we want\n        for (const player of roster) {\n            const position = player.position;\n            //If the position is QB, TE, or K then we can just put them directly in\n            if (position === `QB`) {\n                dbReadyRoster.QB = player;\n                //If it's RB or WR then we need to assign it manually to the 1, 2 and flex spots\n                //First we need to check the RB/WR 1 & 2 spots then assign it into the flex spot\n            } else if (position === `RB`) {\n                if (!dbReadyRoster.RB1) {\n                    dbReadyRoster.RB1 = player;\n                } else if (!dbReadyRoster.RB2) {\n                    dbReadyRoster.RB2 = player;\n                } else if (!dbReadyRoster.Flex) {\n                    dbReadyRoster.Flex = player;\n                }\n            } else if (position === `WR`) {\n                if (!dbReadyRoster.WR1) {\n                    dbReadyRoster.WR1 = player;\n                } else if (!dbReadyRoster.WR2) {\n                    dbReadyRoster.WR2 = player;\n                } else if (!dbReadyRoster.Flex) {\n                    dbReadyRoster.Flex = player;\n                };\n            } else if (position === `TE`) {\n                dbReadyRoster.TE = player;\n            } else if (position === `K`) {\n                dbReadyRoster.K = player;\n            };\n        };\n\n        this.setState({ dbReadyRoster, userRoster: roster });\n\n        return;\n    };\n\n    saveRosterToDb = async (dbReadyRoster, droppedPlayer, saveWithNoDrop) => {\n        //This will not always have a chosenPlayer because if the user is reorganizing the players currently on their roster it will not have a player to be dropped\n        //The saveWithNoDrop var is if the user has a blank week roster, it ensures we save it to the usedPlayerArray because we will be feeding droppedPlayer of 0\n        axios.put(`/api/updateUserRoster`,\n            { userId: this.props.userId, dbReadyRoster, droppedPlayer, week: this.state.weekSelect, season: this.state.seasonSelect, saveWithNoDrop })\n            .then(res => {\n                return\n            }).catch(err => {\n                console.log(err)//TODO Better error handling\n            });\n    };\n\n    checkLockPeriod = async () => {\n        const response = await axios.get(`/api/checkLockPeriod`);\n\n        //If this week is already passed the lock date then return bad request\n        if (this.state.weekOnPage <= response.data.lockWeek) {\n            return false;\n        };\n\n        //TODO Maybe make this a loop to iterate over many years or back out last year\n        if (this.state.seasonOnPage === response.data.lockYear) {\n            return false;\n        };\n\n        //If the week and the season are not locked then we can return true, that the week they are trying to edit is not locked\n        return true;\n    };\n\n    //This triggers off the Form on the roster below that allows the user to search for the position they would like to add to their roster\n    positionSearch = (e) => {\n        e.preventDefault();\n\n        this.loading();\n        const userId = this.props.userId;\n        axios.get(`/api/availablePlayers`,\n            { params: { userId, searchedPosition: this.state.positionSelect, season: this.state.seasonSelect } })\n            .then(res => {\n                this.setState({ availablePlayers: res.data });\n                this.doneLoading();\n            });\n    };\n\n    customSeasonWeekSearch = (e) => {\n        e.preventDefault();\n\n        //Need to clear the playerIds when switching weeks. If not the program makes the array an array of undefined\n        const userRoster = [];\n\n        this.setState({ userRoster })\n\n        this.getRosterData(this.state.weekSelect, this.state.seasonSelect);\n    };\n\n    searchByTeam = (e) => {\n        e.preventDefault();\n\n        this.loading();\n\n        axios.get(`/api/getPlayersByTeam/${this.props.userId}/${this.state.teamSelect}/${this.props.season}`)\n            .then(res => {\n                this.setState({ availablePlayers: res.data });\n                this.doneLoading();\n            });\n    }\n\n    //This is to handle the change for the Input Type in the position search below\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    addDropPlayer = async (mySportsId, addOrDrop) => {\n        //First check if the user is on a differnent page and if the peroid is locked\n        if (!this.state.currentUser) {\n            Alert.fire({\n                title: `Not your roster!`,\n                type: `warning`,\n            });\n            return;\n        };\n        const isLocked = await this.checkLockPeriod();\n        if (!isLocked) {\n            Alert.fire({\n                title: `Peroid is locked!`,\n                type: `warning`,\n                text: `Week ${this.state.weekOnPage} is locked. Please search a different week`,\n            });\n            return;\n        };\n\n        const newAvailablePlayers = this.state.availablePlayers.slice(0);\n        const newRoster = this.state.userRoster.slice(0);\n\n        //First I need to copy the state as is\n        //Then find the player the user wants to add or drop\n        //Then if they are dropping just add the player to the available player list\n        if (addOrDrop === `add`) {\n            let addedPlayerIndex = 0;\n\n            const addedPlayer = newAvailablePlayers.find((player, i) => {\n                if (player.mySportsId === mySportsId) {\n                    addedPlayerIndex = i;\n                    return player;\n                };\n            });\n\n            newAvailablePlayers.splice(addedPlayerIndex, 1);\n            newRoster.push(addedPlayer);\n\n            //The line above is the one that is causing issues. It can handle one add / drop but not any more\n            const needToSave = this.countRoster(this.state.userRoster, newRoster, this.state.availablePlayers);\n            const correctRoster = this.checkRoster(newRoster);\n\n            //We use this is the player has less than a complete roster\n            if (correctRoster && needToSave) {\n                this.sortRoster(newRoster);\n                this.setState({ availablePlayers: newAvailablePlayers });\n                //Is a 0 here because if they added a player earlier to the DB that would have already been picked up by countRoster\n                //The true is to indicate we need to save a player down without dropping one in the usedPlayer array in the DB\n                this.saveRosterToDb(this.state.dbReadyRoster, 0, true);\n            };\n        } else if (addOrDrop === `drop`) {\n            let droppedPlayerIndex = 0;\n            const droppedPlayer = newRoster.find((player, i) => {\n                if (player.mySportsId === mySportsId) {\n                    droppedPlayerIndex = i;\n                    return player;\n                };\n            });\n\n            newRoster.splice(droppedPlayerIndex, 1);\n            newAvailablePlayers.unshift(droppedPlayer);\n\n            const needToSave = this.countRoster(this.state.userRoster, newRoster, this.state.availablePlayers);\n            const correctRoster = this.checkRoster(newRoster);\n\n            //We use this is the player has less than a complete roster\n            if (correctRoster && needToSave) {\n                this.sortRoster(newRoster);\n                this.setState({ availablePlayers: newAvailablePlayers });\n                //Is a 0 here because if they added a player earlier to the DB that would have already been picked up by countRoster\n                //The true is to indicate we need to save a player down without dropping one in the usedPlayer array in the DB\n                this.saveRosterToDb(this.state.dbReadyRoster, mySportsId, false);\n            };\n        };\n    };\n\n    render() {\n        const currentRoster = this.state.dbReadyRoster;\n        const rosterPlayers = ['QB', 'RB1', 'RB2', 'WR1', 'WR2', 'Flex', 'TE', 'K'];\n        return (\n            <Container fluid={true} className='lineHeight'>\n                <Row>\n\n                    <Col md='3' className='noMargin'>\n                        <WeekSearch weekSelect={this.state.weekSelect} handleChange={this.handleChange} customSeasonWeekSearch={this.customSeasonWeekSearch} />\n\n                        <PositionSearch positionSelect={this.state.positionSelect} handleChange={this.handleChange} positionSearch={this.positionSearch} />\n\n                        <TeamSearch handleChange={this.handleChange} searchByTeam={this.searchByTeam} teamSelect={this.state.teamSelect} />\n\n                        <UsedPlayerButton userId={this.props.match.params.userId} username={this.state.usernameOfPage} />\n\n                    </Col>\n\n                    <Col md='9'>\n                        <Row className='topRow'>\n                            <Col xs='12'>\n                                <div className='centerText headerFont'>\n                                    {this.state.usernameOfPage}'s Roster\n                                </div>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col md='1' />\n                            <Col md='5'>\n                                <Row>\n                                    <Col xs='12'>\n                                        <div className='colHeader'>\n                                            Roster\n                                        </div>\n                                    </Col>\n                                </Row>\n                                {rosterPlayers.map(position => (\n                                    <CurrentRosterRow key={position} position={position} player={currentRoster[position]} addDropPlayer={this.addDropPlayer} />\n                                ))}\n                            </Col>\n\n\n                            <Col md='5'>\n                                <Row>\n                                    <Col xs='12'>\n                                        <div className='colHeader'>\n                                            Available Players\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col xs='12'>\n                                        {this.state.availablePlayers.map((player, i) => (\n                                            <AvailablePlayerRow player={player} key={i} addDropPlayer={this.addDropPlayer} />\n                                        ))\n                                        }\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col md='1' />\n                        </Row>\n                    </Col>\n                </Row>\n            </Container >\n        );\n    };\n};\n\nconst CurrentRosterRow = (props) => (\n    <Row className='playerRow'>\n        <Col xs='2'>\n            <div className='positionBox'>\n                {props.position}\n            </div>\n        </Col>\n        <Col xs='10'>\n            {props.player ?\n                <Row>\n                    <Col xs='9'>\n                        <div className='player'>\n                            {props.player.full_name + `, ` + props.player.team}\n                        </div>\n                    </Col>\n                    <Col xs='3'>\n                        <Button className='addDropButton' color='outline-success' size='sm' onClick={() => props.addDropPlayer(props.player.mySportsId, 'drop')}>\n                            Drop\n                        </Button>\n                    </Col>\n                </Row>\n                : ``\n            }\n        </Col>\n    </Row>\n);\n\nconst AvailablePlayerRow = (props) => (\n    <Row className='playerRow'>\n        <Col xs='9'>\n            <div className='player'>\n\n                {props.player.full_name + `, ` + props.player.team + `, ` + props.player.position}\n            </div>\n        </Col>\n        <Col xs='3'>\n            <Button className='addDropButton' color='outline-success' size='sm' onClick={() => props.addDropPlayer(props.player.mySportsId, 'add')}>\n                Add\n            </Button>\n        </Col>\n    </Row>\n);\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Roster);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Button, Row, Col } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst Alert = withReactContent(Swal);\n\nclass PlayerEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    };\n\n    loading() {\n        Alert.fire({\n            title: 'Loading',\n            text: 'Working your request',\n            imageUrl: 'https://media.giphy.com/media/3o7aDczpCChShEG27S/giphy.gif',\n            imageWidth: 200,\n            imageHeight: 200,\n            imageAlt: 'Loading Football',\n            showConfirmButton: false,\n            showCancelButton: false\n        });\n    };\n    doneLoading() {\n        Alert.close()\n    };\n\n    updateNFLRoster = () => {\n        this.loading();\n        axios.get(`/api/updateTeams`).then(response => {\n            this.doneLoading();\n            console.log(response.data);\n        });\n\n    };\n\n    getMassData = () => {\n        Alert.fire({\n            type: `warning`,\n            title: `Are you sure?`,\n            text: `It will take a LONG time`,\n            showCancelButton: true,\n        }).then(async result => {\n            if (result.value) {\n                Alert.fire(`Success`, `This will be a while. Go play some games?`, `success`);\n                this.loading(); // This successfully updates the database but doneLoading doesn't work\n                const response = await axios.get(`/api/massplayerupdate`);\n                this.doneLoading();\n                console.log(response);\n            };\n        });\n    };\n\n    getWeeklyData = async () => {\n        this.loading();\n        try {\n            await axios.get(`/api/updatePlayers/${this.props.season}/${this.props.week}`);\n\n            this.doneLoading();\n        } catch (err) {\n            console.log(err)\n        };\n        this.doneLoading();\n    };\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <Button color='warning' onClick={this.getMassData}>\n                        Mass Update All Players\n                    </Button>\n                    <br />\n                    <br />\n                    <Button color='secondary' onClick={this.updateNFLRoster}>\n                        Update NFL Roster\n                    </Button>\n                    <br />\n                    <br />\n                    <Button color='secondary' onClick={this.getWeeklyData}>\n                        Update Get Weekly Data\n                    </Button>\n                </Col>\n            </Row>\n        );\n    };\n\n\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(PlayerEditor);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Input, Form, FormGroup, Button, Row, Col } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport ReactTable from 'react-table';\n\nimport 'react-table/react-table.css';\nimport './userEditorStyle.css';\n\nconst Alert = withReactContent(Swal);\n\nclass UserEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedUser: ``,\n            userArray: [],\n            loading: true,\n            QB: 0,\n            RB1: 0,\n            RB2: 0,\n            WR1: 0,\n            WR2: 0,\n            Flex: 0,\n            TE: 0,\n            K: 0\n        };\n    };\n\n    componentDidMount() {\n        axios.get(`/api/getAllUsers`).then(res => {\n            this.setState({ loading: false, userArray: res.data });\n        });\n    };\n\n    loading() {\n        Alert.fire({\n            title: 'Loading',\n            text: 'Working your request',\n            imageUrl: 'https://media.giphy.com/media/3o7aDczpCChShEG27S/giphy.gif',\n            imageWidth: 200,\n            imageHeight: 200,\n            imageAlt: 'Loading Football',\n            showConfirmButton: false,\n            showCancelButton: false\n        });\n    };\n    doneLoading() {\n        Alert.close()\n    };\n\n    dummyRoster = async () => {\n        const dummyRoster = {\n            QB: this.state.QB,\n            RB1: this.state.RB1,\n            RB2: this.state.RB2,\n            WR1: this.state.WR1,\n            WR2: this.state.WR2,\n            Flex: this.state.Flex,\n            TE: this.state.TE,\n            K: this.state.K\n        };\n\n        await axios.put(`/api/dummyRoster/`,\n            { userId: this.state.selectedUser, season: this.props.season, week: this.props.week, dummyRoster })\n        this.setState({ QB: 0, RB1: 0, RB2: 0, WR1: 0, WR2: 0, Flex: 0, TE: 0, K: 0 })\n    };\n\n\n    //This is to handle the change for the Input Type in the position search below\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    selectUser = (id) => {\n        this.setState({ selectedUser: id })\n    };\n\n    calculateScores = async () => {\n        this.loading();\n        await axios.get(`/api/calculateScore/${this.props.season}/${this.props.week}/`);\n        this.doneLoading();\n    };\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col xs='4'>\n                        <Button onClick={this.calculateScores} color='primary' className='calculateScoreButton'>\n                            Update Scores\n                        </Button>\n                    </Col>\n                    <Col xs='8'>\n                        <SelectedUser selectedUser={this.state.selectedUser} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Form onSubmit={this.dummyRoster}>\n                            <FormGroup>\n                                <Row>\n                                    <Col sm='12' md='6'>\n                                        <div className='playerIdInput'>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    QB\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.QB} type='text' name='QB' id='QB' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    RB1\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.RB1} type='text' name='RB1' id='RB1' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    RB2\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.RB2} type='text' name='RB2' id='RB2' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    WR1\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.WR1} type='text' name='WR1' id='WR1' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    WR2\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.WR2} type='text' name='WR2' id='WR2' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    Flex\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.Flex} type='text' name='Flex' id='Flex' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    TE\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.TE} type='text' name='TE' id='TE' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    K\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.K} type='text' name='K' id='K' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Col>\n                                    <Col sm='12' md='6'>\n                                        {/* If the admin hasn't yet selected a user then they will not be allowed to view */}\n                                        <Button color='secondary' onClick={this.dummyRoster} disabled={!this.state.selectedUser} className='dummyRosterButton'>\n                                            Submit Dummy Roster\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n                <UserTable userArray={this.state.userArray} loading={this.state.loading} selectUser={this.selectUser} />\n            </div>\n        );\n    };\n};\n\nconst SelectedUser = (props) => {\n    return (\n        <Row>\n            <Col xs='12'>\n                <div className='selectedUser'>\n                    Selected User: <Input value={props.selectedUser} type='text' disabled />\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nconst UserTable = (props) => {\n    return (\n        <Row>\n            <Col xs='12'>\n                <ReactTable\n                    data={props.userArray}\n                    columns={[\n                        { Header: 'Username', accessor: 'username', show: true },\n                        { Header: 'email', accessor: 'email', show: true },\n                        { Header: 'Id', accessor: '_id', show: true }\n                    ]}\n                    loading={props.loading}\n                    filterable\n                    defaultPageSize={20}\n                    className=\"-highlight\"\n                    getTdProps={(state, rowInfo) => {\n                        return {\n                            onClick: () => {\n                                if (!rowInfo) { return };\n                                props.selectUser(rowInfo.original._id);\n                            }\n                        };\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserEditor);\n\n//These should really be taken together since they're used together\nexport { UserTable, SelectedUser };","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport { Label, Input, Container, Button, Row, Col } from 'reactstrap';\n\nimport PlayerEditor from './PlayerEditor';\nimport UserEditor from './UserEditor';\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userEditor: false,\n            playerEditor: false,\n            weekSelect: 0,\n            seasonSelect: ``\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) { // season here because it's the last prop we pass in. Probably not the best way\n            this.setState({ weekSelect: this.props.week, seasonSelect: this.props.season });\n        };\n    };\n\n    componentDidMount() {\n        if (typeof this.props.season !== `undefined`) {\n            this.setState({ seasonSelect: this.props.season });\n        };\n        if (typeof this.props.week !== `undefined`) {\n            this.setState({ weekSelect: this.props.week });\n        };\n    };\n\n    showPlayerEditor = () => {\n        this.setState({ playerEditor: true, userEditor: false })\n    };\n\n    showUserEditor = () => {\n        this.setState({ playerEditor: false, userEditor: true })\n    };\n\n    //This is to handle the change for the Input Type in the position search below\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    render() {\n        const { playerEditor, userEditor } = this.state;\n\n        return (\n            <Container fluid={true}>\n                <Row>\n                    <Col sm='12' md='3'>\n                        <Label for='seasonSelect'>Select Season</Label>\n                        <Input value={this.state.seasonSelect} type='select' name='seasonSelect' id='seasonSelect' onChange={this.handleChange}>\n                            <option>2018-2019-regular</option>\n                            <option>2019-2020-regular</option>\n                        </Input>\n                        <Label for='weekSelect'>Select Week</Label>\n                        <Input value={this.state.weekSelect} type='select' name='weekSelect' id='weekSelect' onChange={this.handleChange}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                            <option>6</option>\n                            <option>7</option>\n                            <option>8</option>\n                            <option>9</option>\n                            <option>10</option>\n                            <option>11</option>\n                            <option>12</option>\n                            <option>13</option>\n                            <option>14</option>\n                            <option>15</option>\n                            <option>16</option>\n                            <option>17</option>\n                        </Input>\n                        <br />\n                        <br />\n                        <Button color='primary' onClick={this.showPlayerEditor}>Player Editor</Button>\n                        <br />\n                        <br />\n                        <Button color='primary' onClick={this.showUserEditor}>User Editor</Button>\n                    </Col>\n                    <Col sm='12' md='9'>\n                        {playerEditor &&\n                            <PlayerEditor week={this.state.weekSelect} season={this.state.seasonSelect} />\n                        }\n                        {userEditor &&\n                            <UserEditor week={this.state.weekSelect} season={this.state.seasonSelect} />\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n// TODO Add a check here to make sure that the user is an admin\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AdminPanel);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Container, Button, Row, Col } from 'reactstrap';\nimport { UserTable, SelectedUser } from './UserEditor';\n\nimport './upgradeToAdmin.css';\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\n//Using Swal to display messages when add book button is hit\nconst Alert = withReactContent(Swal);\n\nclass UpgradeToAdmin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedUser: ``,\n            userArray: [],\n            loading: true,\n        };\n    };\n\n    componentDidMount() {\n        axios.get(`/api/getAllUsers`).then(res => {\n            this.setState({ loading: false, userArray: res.data });\n        });\n    };\n\n    selectUser = (id) => {\n        this.setState({ selectedUser: id })\n    };\n\n    upgradeToAdmin = async () => {\n        const serverResponse = await axios.put(`/api/updateUserToAdmin/${this.state.selectedUser}`);\n        Alert.fire({\n            type: 'success',\n            text: serverResponse.data\n        });\n    };\n\n    render() {\n        return (\n            <Container fluid={true}>\n                <Row>\n                    <Col xs='12' className='upgradeCol'>\n                        what the fuck\n                        <SelectedUser selectedUser={this.state.selectedUser} />\n                        <Button className='adminButton' onClick={this.upgradeToAdmin} disabled={!this.state.selectedUser} >Upgrade to Admin</Button>\n                        <UserTable userArray={this.state.userArray} loading={this.state.loading} selectUser={this.selectUser} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UpgradeToAdmin);","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\n\nclass RosterButton extends Component {\n    redirect = () => {\n        const redirectValue = '/roster/' + this.props.userId;\n\n        this.props.history.push(redirectValue);\n    };\n    render() {\n        return (\n            <Row className='rosterButton'>\n                <Col xs='0' md='4' />\n                <Col xs='12' md='4'>\n                    <div className='centerText'>\n                        <Button color='info' onClick={this.redirect}>\n                            View {this.props.username}'s Roster\n                        </Button>\n                    </div>\n                </Col>\n                <Col xs='0' md='4' />\n            </Row>\n        );\n    };\n};\n\nexport default withRouter(RosterButton);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport { Container, Col, Row } from 'reactstrap';\n\nimport './usedPlayerStyle.css';\nimport RosterButton from '../Roster/RosterButton';\n\nclass UsedPlayers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usedPlayers: [],\n            loading: false,\n            usernameOfPage: '',\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.season !== '') {\n            this.getUsedPlayers();\n            this.getCurrentUsername();\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) {\n            this.getUsedPlayers();\n            this.getCurrentUsername();\n        };\n    };\n\n    getCurrentUsername() {\n        axios.get(`/api/getUserById/${this.props.match.params.userId}`)\n            .then(res => {\n                this.setState({ usernameOfPage: res.data.local.username })\n            }).catch(err => {\n                console.log(err); //TODO better error handling\n            });\n    };\n\n    getUsedPlayers = () => {\n        this.setState({ loading: true });\n        axios.get(`/api/getUsedPlayers/${this.props.match.params.userId}/${this.props.season}`)\n            .then(res => {\n                this.setState({ usedPlayers: res.data, loading: false });\n            }).catch(err => {\n                console.log(err)//TODO Better error handling\n            });\n\n    };\n\n    render() {\n        const columns = [\n            { Header: `QB`, accessor: `QB`, show: true },\n            { Header: `RB`, accessor: `RB`, show: true },\n            { Header: `WR`, accessor: `WR`, show: true },\n            { Header: `TE`, accessor: `TE`, show: true },\n            { Header: `K`, accessor: `K`, show: true }];\n\n        return (\n            <Container fluid={true}>\n                <Row>\n                    <Col xs='12'>\n                        <Row>\n                            <Col xs='12'>\n                                <div className='centerText titleMargin headerFont'>\n                                    {this.state.usernameOfPage}'s Used Players\n                                </div>\n                                <RosterButton\n                                    username={this.state.usernameOfPage}\n                                    userId={this.props.match.params.userId} />\n                            </Col>\n                        </Row>\n                        <ReactTable\n                            data={this.state.usedPlayers}\n                            columns={columns}\n                            loading={this.state.loading}\n                            defaultPageSize={50}\n                            className=\"-highlight\"\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default UsedPlayers;","import React, { Component } from 'react';\nimport * as Routes from './constants/routes';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { withFirebase } from './componenets/Firebase';\nimport axios from 'axios';\n\n// Components\nimport SignUpPage from './componenets/SignUp';\nimport SignInPage from './componenets/SignIn';\nimport NavBar from './componenets/NavBar';\nimport Home from './componenets/Home';\nimport PasswordReset from './componenets/PasswordReset';\nimport PasswordChange from './componenets/PasswordChange';\nimport UserProfile from './componenets/UserProfile';\nimport CreateGroup from './componenets/CreateGroup';\nimport GroupPage from './componenets/GroupPage';\nimport DisplayPlayers from './componenets/DisplayPlayers';\nimport Roster from './componenets/Roster';\nimport AdminPanel from './componenets/AdminPanel';\nimport UpgradeToAdmin from './componenets/AdminPanel/UpgradeToAdmin';\nimport UsedPlayers from './componenets/UsedPlayers';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n      currentUser: {},\n      currentWeek: 0,\n      currentSeason: ``\n    }\n\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.setState({ authUser });\n        this.isSignedIn(authUser.email);\n      } else {\n        this.setState({ authUser: null, currentUser: {} });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  };\n\n  isSignedIn = async (email) => {\n    const dbResponse = await axios.get(`/api/getUser/${email}`);\n    const currentUser = {\n      username: dbResponse.data.local.username,\n      userId: dbResponse.data._id,\n      isAdmin: dbResponse.data.isAdmin\n    }\n    this.setState({ currentUser });\n    this.getSeasonAndWeek();\n  };\n\n  getSeasonAndWeek = async () => {\n    const seasonAndWeek = await axios.get(`/api/currentSeasonAndWeek`);\n    this.setState({ currentSeason: seasonAndWeek.data.season, currentWeek: seasonAndWeek.data.week })\n  };\n\n  render() {\n\n    return (\n\n      <BrowserRouter>\n\n        <div>\n          <NavBar authUser={this.state.authUser} />\n          {/* Routes to different components */}\n          <Route\n            exact path={Routes.home}\n            render={() =>\n              <Home\n                userId={this.state.currentUser.userId}\n                isAdmin={this.state.currentUser.isAdmin}\n                week={this.state.currentWeek}\n                season={this.state.currentSeason} />} />\n          <Route\n            path={Routes.adminPanel}\n            render={() =>\n              <AdminPanel\n                week={this.state.currentWeek}\n                season={this.state.currentSeason} />}\n          />\n          <Route\n            path={Routes.signin}\n            render={() =>\n              <SignInPage />}\n          />\n          <Route\n            path={Routes.signup}\n            render={() =>\n              <SignUpPage />}\n          />\n          <Route\n            path={Routes.passwordReset}\n            render={() =>\n              <PasswordReset />}\n          />\n          <Route\n            path={Routes.passwordChange}\n            render={() =>\n              <PasswordChange />}\n          />\n          <Route\n            path={Routes.userProfile}\n            render={() =>\n              <UserProfile />}\n          />\n          <Route\n            path={Routes.createGroup}\n            render={() =>\n              <CreateGroup\n                userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/group/:groupID`}\n            render={() =>\n              <GroupPage\n                userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/displayplayers`}\n            render={() =>\n              <DisplayPlayers />\n            }\n          />\n          <Route\n            path={Routes.roster}\n            render={props =>\n              <Roster\n                {...props}\n                userId={this.state.currentUser.userId}\n                week={this.state.currentWeek}\n                season={this.state.currentSeason} />\n            }\n          />\n          <Route\n            path={Routes.upgradeToAdmin}\n            render={() =>\n              <UpgradeToAdmin />}\n          />\n          <Route\n            path={Routes.usedPlayers}\n            render={props =>\n              <UsedPlayers\n                {...props}  //Need to pass down the props spread to have access to the URL\n                season={this.state.currentSeason}\n                week={this.state.currentWeek} />\n            }\n          />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Firebase, { FirebaseContext } from './componenets/Firebase';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( \n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}