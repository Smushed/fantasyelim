{"version":3,"sources":["componenets/NavBar/SignOut.png","componenets/NavBar/ElimLogo.jpg","componenets/404/Champs.jpg","constants/routes.js","componenets/Firebase/context.js","componenets/Firebase/firebase.js","componenets/Firebase/index.js","componenets/SignInOut/index.js","componenets/NavBar/SignOutButton.js","componenets/NavBar/NavBar.js","componenets/Session/withAuthorization.js","componenets/Roster/SearchDropdowns.js","componenets/Roster/index.js","componenets/Home/Leaderboard.js","componenets/Home/index.js","componenets/SignInOut/PasswordChange.js","componenets/UserProfile/UserProfile.js","componenets/SeasonLongScore/index.js","componenets/AdminPanel/PlayerEditor.js","componenets/AdminPanel/UserEditor.js","componenets/AdminPanel/index.js","componenets/AdminPanel/UpdateWeek.js","componenets/AdminPanel/UpgradeToAdmin.js","componenets/UsedPlayers/index.js","componenets/GroupPage/CreateAllGroup.js","componenets/404/FourOFour.js","App.js","index.js","componenets/SignInOut/EliminatorSignInLogo.png"],"names":["module","exports","home","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","app","currentUser","updatePassword","initializeApp","this","Alert","withReactContent","Swal","SignInOut","switchView","setState","showSignIn","state","className","src","ElimLogo","alt","SignInForm","SignUpForm","signUpState","username","confirmPassword","redirectTo","error","emailValid","passwordValid","usernameValid","validMessage","SignUpFormBase","handleSubmit","event","a","preventDefault","checkValidInput","axios","post","status","then","authUser","history","push","Routes","catch","console","log","handleChange","name","target","value","validateForm","invalidInputs","invalidMessages","fieldName","validCheck","match","checkPassword","length","noSpacesInPassword","checkUsername","usernameLength","onClick","onSubmit","type","placeholder","onChange","SignInFormBase","code","forgotPassword","fire","title","input","inputValue","inputPlaceholder","compose","withRouter","SignOutIcon","NavBar","sendAuthEmail","sendEmailVerification","emailSent","VerifyEmailButton","SentVerifyEmail","Link","to","groupId","userId","emailVerified","withAuthorization","condition","WithAuthorization","listener","onAuthStateChanged","WeekSearch","Input","weekSelect","id","customSeasonWeekSearch","PositionSearch","positionSelect","positionSearch","PlayerSearch","Roster","clearPlayers","userRoster","getRosterData","week","weekOnPage","season","loading","get","params","res","data","groupPositions","doneLoading","err","countLogic","roster","QBCount","RBCount","WRCount","TECount","KCount","i","position","P","countRoster","originalRoster","updatedRoster","originalAvailablePlayers","addedPlayer","tooManyPlayers","filteredRoster","filter","player","fullPlayers","M","N","inputOptions","showCancelButton","chosenPlayer","intChosenPlayer","parseInt","intAddedPlayer","availablePlayers","slice","droppedPlayerIndex","availDroppedPlayerIndex","droppedPlayer","find","splice","T","pop","unshift","checkRoster","saveRosterToDb","text","confirmButtonColor","confirmButtonText","undefined","response","put","checkLockPeriod","LW","e","searchedPosition","usedPlayers","currentPositionUsedPlayers","customPlayerSearch","playerSearch","addPlayerToRoster","newRoster","sortedUpdatedRoster","addedPosition","addDropPlayer","mySportsId","addOrDrop","newAvailablePlayers","addedPlayerIndex","needToSave","bind","usernameOfPage","getUsedPlayers","checkCurrentUser","getCurrentUsername","prevProps","UN","imageUrl","imageWidth","imageHeight","imageAlt","showConfirmButton","close","map","key","evenOrOddRow","CurrentRosterRow","score","PlayerDisplayRow","RosterDisplay","UID","Leaderboard","groupName","leaderboard","user","W","TS","Home","updateRosterWeek","group","_id","userDisplayed","userIdDisplayed","groupRosters","getLeaderBoard","rosters","weekForLeaderboard","R","inputStyle","width","height","marginLeft","marginRight","labelStyle","marginBottom","fontSize","initalState","passwordConfirm","PasswordChangeForm","isInvalid","message","Form","Label","style","htmlFor","FormGroup","Button","color","disabled","buttonStyle","centerText","textAlign","updateProfileStyle","header","marginTop","profileDisplayStyle","initialUpdateState","firstname","lastname","initialProfileState","dbUsername","dbEmail","dbFirstname","dbLastname","isCurrentUser","UserProfile","userIDFromURL","userID","updatedProfile","getUserData","dbResponse","local","PasswordChange","UpdateInformationForm","fieldSubmitted","request","usernameIsInvalid","emailIsInvalid","firstnameIsInvalid","lastnameIsInvalid","SeasonLongScore","displayReadyRosters","seasonData","sortRoster","seasonRostersArray","sortWeek","weekArray","displayReadyRoster","QB","RB1","RB2","Flex","WR1","WR2","TE","K","rosterPlayers","Container","fluid","Row","weekRoster","WeekDisplay","Col","xs","currentRoster","nameCol","scoreCol","PlayerEditor","updateNFLRoster","getMassData","result","getWeeklyData","rankPlayers","UserEditor","dummyRoster","selectedUser","groupSelect","createRoster","selectUser","isSelected","groupList","calculateScores","fillDummyRoster","userArray","sm","md","SelectedUser","UserTable","columns","Header","accessor","show","filterable","defaultPageSize","getTdProps","rowInfo","original","AdminPanel","checkAdminStatus","isAdmin","showPlayerEditor","playerEditor","userEditor","showUserEditor","createAllRosters","seasonSelect","for","UpdateWeek","updateWeekSeason","dbPass","handleWrongPass","currentWeek","lockWeek","cancelButtonText","UpgradeToAdmin","upgradeToAdmin","serverResponse","UsedPlayers","getGroupPositionsForDisplay","displayPositions","forDisplay","CreateAllGroup","PurgeDB","FourOFour","PoorBaby","App","isSignedIn","A","playerPositions","GL","currentGroup","positionOrder","getSeasonAndWeek","seasonAndWeek","currentSeason","BrowserRouter","Switch","Route","exact","path","render","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2301dca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SignOut.781f5e34.png\";","module.exports = __webpack_public_path__ + \"static/media/ElimLogo.5b1946b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Champs.e35b1081.jpg\";","export const home = '/';\nexport const signup = '/signup';\nexport const signin = '/signin';\nexport const userProfile = '/userprofile';\nexport const passwordChange = '/passwordchange';\nexport const createGroup = '/creategroup';\nexport const discussion = '/discussion';\nexport const roster = '/roster/:groupId/:userId';\nexport const adminPanel = '/adminPanel/';\nexport const usedPlayers = '/usedPlayers/:groupId/:userId';\nexport const seasonLongScore = '/seasonLongScore/:userId';\nexport const createAllGroup = '/createAllGroup';\nexport const updateWeek = '/updateWeek';\nexport const fourOFour = '/*';\n\n\n//These are hidden routes. Ones that have no link but anyone can go to them if they'd like\nexport const upgradeToAdmin = '/upgradeToAdmin/';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire(`dotenv`).config();\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password);\n    };\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => { return this.auth.sendPasswordResetEmail(email) };\n\n    doPasswordUpdate = password => {\n        const user = app.auth().currentUser;\n        return user.updatePassword(password);\n    };\n};\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\nimport axios from 'axios';\n\nimport './signInOutStyle.css';\nimport ElimLogo from './EliminatorSignInLogo.png';\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst Alert = withReactContent(Swal);\n\n\nclass SignInOut extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showSignIn: true,\n        };\n    };\n    switchView = () => {\n        this.setState({ showSignIn: !this.state.showSignIn });\n    };\n\n    render() {\n        return (\n\n            <div className='signInUpContainer'>\n                <div className='logoContainer'>\n                    <img className='signInOutLogo' src={ElimLogo} alt={`Home`} />\n                </div>\n                {this.state.showSignIn ?\n                    <SignInForm switchView={this.switchView} />\n                    :\n                    <SignUpForm switchView={this.switchView} />\n                }\n            </div>\n        );\n    };\n};\n\nconst signUpState = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    redirectTo: null,\n    error: null,\n    emailValid: false,\n    passwordValid: false,\n    usernameValid: false,\n    validMessage: []\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            signUpState\n        };\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        //Checks if all the input fields are valid\n        //If not the validation messages are shown and no user is sent to sign up\n        if (this.checkValidInput()) {\n            const { username, email, password } = this.state;\n\n            const dbResponse = await axios.post(`/api/newUser`, { username, email });\n\n            if (dbResponse.status === 200) {\n                return this.props.firebase\n                    .doCreateUserWithEmailAndPassword(email, password)\n                    .then(authUser => {\n                        //The User has been successfully authenticated, clear this component state and redirect them to the home page\n                        this.setState({ ...signUpState });\n                        this.props.history.push(Routes.home);\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        this.setState({ error });\n                    });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.emailValid) {\n            invalidInputs++;\n            invalidMessages.push(`Email entered is invalid`);\n        };\n        if (!this.state.usernameValid) {\n            invalidInputs++;\n            invalidMessages.push(`Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes`);\n        };\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@']+(\\.[^<>()\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `password`:\n                let checkPassword = value.length >= 6;\n                let noSpacesInPassword = value.match(/^\\S*$/);\n                validCheck = checkPassword && noSpacesInPassword ? true : false;\n                this.setState({ passwordValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    render() {\n        return (\n            <div className='formContainer'>\n                <div className='switchViewContainer'>\n                    <div className='fullWidth'>\n                        Have an account?\n                    </div>\n                    <button className='btn btn-info switchView' onClick={() => this.props.switchView()}>\n                        Sign In\n                    </button>\n                </div>\n                <div className='signInUpWrapper' >\n                    <form onSubmit={this.handleSubmit}>\n                        <div className='signInHeader'>\n                            Sign Up\n                        </div>\n                        <div className='errorMessages'>\n                            {this.state.error}\n                        </div>\n                        <div className='labelContainer'>\n                            <label className='signInOutLabel'>Email:</label>\n                        </div>\n                        <div className='inputContainer'>\n                            <input className='signInOutInput' name='email' type='text' placeholder='ex. janedoe@gmail.com' value={this.state.email} onChange={this.handleChange} />\n                        </div>\n                        <div className='labelContainer'>\n                            <label className='signInOutLabel'>Username:</label>\n                        </div>\n                        <div className='labelDescriptor'>\n                            (Between 3 & 16 characters, no special characters & no spaces)\n                            </div>\n                        <div className='inputContainer'>\n                            <input className='signInOutInput' name='username' type='text' placeholder='ex. JaneDoe14' value={this.state.username} onChange={this.handleChange} />\n                        </div>\n                        <div className='labelContainer'>\n                            <label className='signInOutLabel'>Password:</label>\n                        </div>\n                        <div className='labelDescriptor'>\n                            (Must be at least 6 characters with no spaces)\n                            </div>\n                        <div className='inputContainer'>\n                            <input className='signInOutInput' name='password' type='password' placeholder='Password' value={this.state.password} onChange={this.handleChange} />\n                        </div>\n                        <div className='labelContainer'>\n                            <label className='signInOutLabel'>Confirm Password:</label>\n                        </div>\n                        <div className='inputContainer'>\n                            <input className='signInOutInput' name='confirmPassword' type='password' placeholder='Confirm Password' value={this.state.confirmPassword} onChange={this.handleChange} />\n                        </div>\n                        <div className='inputContainer buttonContainer'>\n                            <button className='signInUpBtn btn btn-success'>Sign Up</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    };\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            error: null\n        };\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                console.log(error)\n                switch (error.code) {\n                    case 'auth/invalid-email':\n                        this.setState({ error: 'Invalid Email Format' });\n                        break;\n                    case 'auth/user-not-found':\n                        this.setState({ error: 'Email Not Found' });\n                        break;\n                    case 'auth/wrong-password':\n                        this.setState({ error: 'Wrong Email / Password' })\n                        break;\n                    default:\n                        this.setState({ error: 'Error - Please Reload!' });\n                        break;\n                }\n            });\n    };\n\n    forgotPassword = async () => {\n        const { value: email } = await Alert.fire({\n            title: 'Input Email Address',\n            input: 'email',\n            inputValue: this.state.email,\n            inputPlaceholder: 'email@email.com'\n        });\n        if (!email) {\n            return;\n        } else {\n            this.props.firebase.doPasswordReset(email)\n                .then(() => Alert.fire(`Password reset email sent to ${email}`));\n        };\n    };\n    render() {\n        return (\n            <div className='formContainer'>\n                <div className='signInUpWrapper' >\n                    <form onSubmit={this.handleSubmit}>\n                        <div className='signInHeader'>\n                            Sign In\n                        </div>\n                        <div className='errorMessages'>\n                            {this.state.error}\n                        </div>\n                        <div className='labelContainer'>\n                            <label className='signInOutLabel'>Email:</label>\n                        </div>\n                        <div className='inputContainer'>\n                            <input className='signInOutInput' name='email' type='text' placeholder='email' value={this.state.email} onChange={this.handleChange} />\n                        </div>\n                        <div className='labelContainer'>\n                            <label className='signInOutLabel'>Password:</label>\n                        </div>\n                        <div className='inputContainer'>\n                            <input className='signInOutInput' name='password' type='password' placeholder='password' value={this.state.password} onChange={this.handleChange} />\n                        </div>\n                        <div className='inputContainer buttonContainer'>\n                            <button className='signInUpBtn btn btn-success'>Sign In</button>\n                            <input type='button' className='forgotPassBtn btn btn-secondary' onClick={this.forgotPassword} value='Forgot Password?' />\n                        </div>\n                    </form>\n                </div>\n                <div className='switchViewContainer'>\n                    <div className='fullWidth'>\n                        Need an account?\n                    </div>\n                    <button className='btn btn-info switchView' onClick={() => this.props.switchView()}>\n                        Sign Up\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\n\nexport default SignInOut;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\n\nimport SignOutIcon from './SignOut.png';\n\nconst SignOutButton = ({ firebase }) => (\n  <div onClick={firebase.doSignOut} className='signOut'>\n    <img className='signoutIcon' src={SignOutIcon} alt='Sign Out' />\n    Sign Out\n  </div>\n);\n\nexport default withFirebase(SignOutButton);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as Routes from '../../constants/routes';\nimport SignOutButton from './SignOutButton';\n\nimport ElimLogo from './ElimLogo.jpg';\nimport './navBarStyle.css';\n\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            emailSent: false,\n        };\n    };\n\n    sendAuthEmail = (authUser) => {\n        authUser.sendEmailVerification();\n        this.setState({ emailSent: true });\n    };\n\n    VerifyEmailButton = ({ authUser }) =>\n        <div className='verifyEmailDiv floatRight notifications'>\n            Please Verify your Email\n        <br />\n            <button className='btn btn-info' onClick={() => this.sendAuthEmail(authUser)}>Send Verification Email</button>\n        </div>;\n\n    SentVerifyEmail = () => <div className='sentEmail floatRight notifications'>Email has been sent</div>;\n\n    render() {\n        return (\n            <div className='navHeader'>\n                <div className='halfWay leftHalf'>\n                    <div>\n                        <Link to={Routes.home}>\n                            <img className='navHomeIcon floatLeft' src={ElimLogo} alt={`Home`} />\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to={`/roster/${this.props.groupId}/${this.props.userId}`}>\n                            <button className='btn btn-success navButton floatLeft'>Your Roster</button>\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to={`/usedPlayers/${this.props.groupId}/${this.props.userId}`}>\n                            <button className='btn btn-success navButton floatLeft'>Your Used Players</button>\n                        </Link>\n                    </div>\n                </div>\n                <div className='halfWay rightHalf'>\n                    <SignOutButton />\n                    {!this.props.authUser.emailVerified && (\n                        this.state.emailSent ?\n                            <this.SentVerifyEmail /> :\n                            <this.VerifyEmailButton authUser={this.props.authUser} />)}\n                </div>\n            </div>\n        );\n    };\n};\n\n\n\nexport default NavBar;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(Routes.signin);\n                    }\n                }\n            );\n        };\n\n        componentWillUnmount() {\n            this.listener();\n        };\n\n        render() {\n            return (\n                <Component {...this.props} />\n            );\n        };\n    };\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\nimport { Input } from 'reactstrap';\n\n\nconst WeekSearch = (props) => (\n    <div className='selectContainer'>\n        <div className='inputLength'>\n            <Input value={props.weekSelect} type='select' name='weekSelect' id='weekSelect' className='searchDropdown' onChange={props.handleChange}>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n                <option>6</option>\n                <option>7</option>\n                <option>8</option>\n                <option>9</option>\n                <option>10</option>\n                <option>11</option>\n                <option>12</option>\n                <option>13</option>\n                <option>14</option>\n                <option>15</option>\n                <option>16</option>\n                <option>17</option>\n            </Input>\n        </div>\n        <button className='btn btn-primary submitButton' onClick={props.customSeasonWeekSearch} >\n            Search\n    </button>\n    </div>\n);\n\nconst TeamSearch = (props) => (\n    <div className='selectContainer'>\n        <div className='inputContainer inputLength'>\n            <Input value={props.teamSelect} type='select' name='teamSelect' id='teamSelect' className='searchDropdown' onChange={props.handleChange}>\n                <option>ARI</option>\n                <option>ATL</option>\n                <option>BAL</option>\n                <option>BUF</option>\n                <option>CAR</option>\n                <option>CHI</option>\n                <option>CIN</option>\n                <option>CLE</option>\n                <option>DAL</option>\n                <option>DEN</option>\n                <option>DET</option>\n                <option>GB</option>\n                <option>HOU</option>\n                <option>IND</option>\n                <option>JAX</option>\n                <option>KC</option>\n                <option>LAC</option>\n                <option>LA</option>\n                <option>MIA</option>\n                <option>MIN</option>\n                <option>NE</option>\n                <option>NO</option>\n                <option>NYG</option>\n                <option>NYJ</option>\n                <option>OAK</option>\n                <option>PHI</option>\n                <option>PIT</option>\n                <option>SEA</option>\n                <option>SF</option>\n                <option>TB</option>\n                <option>TEN</option>\n                <option>WAS</option>\n            </Input>\n        </div>\n        <button className='btn btn-primary submitButton' onClick={props.searchByTeam} >\n            Search\n        </button>\n    </div>\n);\n\nconst PositionSearch = (props) => (\n    <div className='selectContainer'>\n        <div className='inputLength'>\n            <Input value={props.positionSelect} type='select' name='positionSelect' id='positionSelect' className='searchDropdown' onChange={props.handleChange}>\n                <option>QB</option>\n                <option>RB</option>\n                <option>WR</option>\n                <option>TE</option>\n                <option>K</option>\n            </Input>\n        </div>\n        <button className='btn btn-primary submitButton' onClick={props.positionSearch} >\n            Search\n    </button>\n    </div>\n);\n\nconst PlayerSearch = (props) => (\n    <div className='selectContainer'>\n        <div className='inputLength'>\n            <Input value={'COMING SOON'} type='text' name='playerSearch' id='playerSearch' className='searchDropdown' />\n        </div>\n        <button className='btn btn-primary submitButton' onClick={''}>\n            Search\n        </button>\n    </div>\n)\n\n\nexport { PositionSearch, TeamSearch, WeekSearch, PlayerSearch };","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport './rosterStyle.css';\nimport './playerStyle.css';\n\nimport { WeekSearch, PositionSearch, PlayerSearch } from './SearchDropdowns';\n\nconst Alert = withReactContent(Swal);\n\nclass Roster extends Component {\n    constructor(props) {\n        super(props);\n        //Must set state hard here to ensure that it is loaded properly when the component unmounts and remounts±\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            userRoster: [],\n            availablePlayers: [],\n            positionSelect: `QB`, //This is the default value for the position search\n            playerSearch: ``,\n            weekSelect: 0,\n            weekOnPage: 0, //The week and season are here when the player searches for their roster. This updates ONLY when the player actually refreshes their roster\n            currentUser: false,\n            usernameOfPage: '',\n            groupPositions: [],\n            usedPlayers: {},\n            currentPositionUsedPlayers: []\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.week !== 0 && this.props.season !== '') {\n            this.setState({ weekSelect: this.props.week });\n            this.getRosterData(this.props.week);\n            this.getUsedPlayers();\n            this.checkCurrentUser();\n            this.getCurrentUsername();\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) { // season here because it's the last prop we pass in. Probably not the best way\n            this.setState({ weekSelect: this.props.week });\n            this.getRosterData(this.props.week);\n            this.getUsedPlayers();\n            this.checkCurrentUser();\n            this.getCurrentUsername();\n        };\n    };\n\n    componentWillUnmount() {\n        this.doneLoading();\n    };\n\n    getUsedPlayers() {\n        axios.get(`/api/getUsedPlayers/${this.props.match.params.userId}/${this.props.season}/${this.props.match.params.groupId}`)\n            .then(res => {\n                this.setState({ usedPlayers: res.data })\n            }).catch(err => {\n                console.log(err); //TODO better error handling\n            });\n    };\n\n    getCurrentUsername() {\n        axios.get(`/api/getUserById/${this.props.match.params.userId}`)\n            .then(res => {\n                this.setState({ usernameOfPage: res.data.UN })\n            }).catch(err => {\n                console.log(err); //TODO better error handling\n            });\n    };\n\n    checkCurrentUser() {\n        if (this.props.userId === this.props.match.params.userId) {\n            this.setState({ currentUser: true });\n        } else {\n            this.setState({ currentUser: false });\n        };\n    };\n\n    //We define loading and done loading here to have swal pop ups whenever we are pulling in data so the user can't mess with data while it's in a loading state\n    loading() {\n        Alert.fire({\n            title: 'Loading',\n            text: 'Loading available players',\n            imageUrl: 'https://media.giphy.com/media/3o7aDczpCChShEG27S/giphy.gif',\n            imageWidth: 200,\n            imageHeight: 200,\n            imageAlt: 'Loading Football',\n            showConfirmButton: false,\n            showCancelButton: false\n        });\n    };\n\n    doneLoading() {\n        Alert.close()\n    };\n\n    clearPlayers = () => {\n        //Gets rid of all the players that are sitting in state when the user goes to another week\n        this.setState({ userRoster: [] });\n    };\n\n    getRosterData = (week) => {\n\n        this.setState({ weekOnPage: week })\n        //We want to go and grab the roster no matter what\n        //This is in case another user comes to the profile and wants to view their picks\n        //We pass in a params along with the API call stating if this is the current user or not\n        if (this.props.week !== 0 && this.props.season !== ``) {\n            //Inside here after the current roster is hit, then go in and pull the other data\n            //Make the pull available players easily hit from other places as well, since I want a dropdown that defaults to this week\n            //But can be changed in case people want to update more than just this week at once.\n            this.loading();\n            axios.get(`/api/userRoster/${this.props.match.params.groupId}/${this.props.match.params.userId}`,\n                { params: { week, season: this.props.season } })\n                .then(res => {\n                    this.setState({ userRoster: res.data.userRoster, groupPositions: res.data.groupPositions });\n                    this.doneLoading();\n                }).catch(err => {\n                    console.log(`roster data error`, err); //TODO better error handling\n                });\n        };\n    };\n\n    countLogic = (roster) => {\n        let QBCount = 0;\n        let RBCount = 0;\n        let WRCount = 0;\n        let TECount = 0;\n        let KCount = 0;\n\n        //We then go through the current user roster and populate it with data to sort it and get all the players\n        for (let i = 0; i < roster.length; i++) {\n            const position = roster[i].P;\n            //For the RB And WR positions, there are three options each they can be in\n            //RB/WR 1 & 2 as well as a flex position. All of which are undefined because we cannot have duplicate keys in an object\n            //We use a switch statement for WR and RB and start pulling the data into the fake roster\n            if (position === `RB`) {\n                RBCount++;\n            } else if (position === `WR`) {\n                WRCount++;\n            } else if (position === `QB`) {\n                QBCount++;\n            } else if (position === `TE`) {\n                TECount++;\n            } else if (position === `K`) {\n                KCount++;\n            };\n        };\n        return { QBCount, RBCount, WRCount, TECount, KCount }\n    };\n\n    //This is to check if the player has too many of a certain position on their roster\n    countRoster = (originalRoster, updatedRoster, originalAvailablePlayers, addedPlayer) => {\n        const { QBCount, RBCount, WRCount, TECount, KCount } = this.countLogic(updatedRoster)\n\n        //Checks if any positions have too many on the roster then feed the data into the function to handle this\n        //Probably a bettwe way to do this, but unsure of how.\n        //Also need to feed in the originalRoster in case the player cancels out and we are to reload the original state\n        if (QBCount > 1) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `QB`, originalAvailablePlayers, addedPlayer);\n            return false; //Return false here because we are splitting and handling this with the tooManyPlayers and no longer need to save it in the onDragEnd\n        } else if (WRCount > 3) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `WR`, originalAvailablePlayers, addedPlayer);\n            return false;\n        } else if (RBCount > 3) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `RB`, originalAvailablePlayers, addedPlayer);\n            return false;\n        } else if (RBCount + WRCount > 5) {\n            //Here we want the WR or RB to be over three. If they already have 3 on their roster, it means that one is already in their flex\n            //If they only have two then they can sub one of the other positions and put it in their flex\n            this.tooManyPlayers(originalRoster, updatedRoster, `Flex`, originalAvailablePlayers, addedPlayer);\n            return false;\n        } else if (TECount > 1) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `TE`, originalAvailablePlayers, addedPlayer);\n            return false;\n        } else if (KCount > 1) {\n            this.tooManyPlayers(originalRoster, updatedRoster, `K`, originalAvailablePlayers, addedPlayer);\n            return false;\n        };\n        return true;\n    };\n\n    tooManyPlayers = async (originalRoster, roster, position, originalAvailablePlayers, addedPlayer) => {\n        let filteredRoster = [];\n        if (position === `Flex`) {\n            filteredRoster = roster.filter(player => player.P === `RB` || player.P === `WR`);\n        } else {\n            filteredRoster = roster.filter(player => player.P === position);\n        };\n\n        //Iterate over the filtered array and get the full data for the players to give the user a choice\n        //We need it in this format so swal will properly list the options\n        const fullPlayers = {};\n\n        for (let i = 0; i < filteredRoster.length; i++) {\n            //First we have to initialize the object because of the bracket notation\n            fullPlayers[filteredRoster[i].M] = ``;\n            //THen we populate the full name from the state to give the player the chance to pick between the one they just added and the player on their roster\n            fullPlayers[filteredRoster[i].M] = filteredRoster[i].N;\n        };\n\n        //chosenPlayer === the player the user would like to be dropped\n        const { value: chosenPlayer } = await Alert.fire({\n            title: `Too many ${position}s`,\n            input: `select`,\n            inputPlaceholder: `Which player do you want to drop?`,\n            inputOptions: fullPlayers,\n            showCancelButton: true,\n        });\n\n        if (+chosenPlayer === +addedPlayer.M) {\n            this.setState({ userRoster: originalRoster });\n            return;\n        };\n\n        //If the player responded with the player they would like to drop then we will take them out of their current array and then set the new state\n        if (chosenPlayer) {\n            const intChosenPlayer = parseInt(chosenPlayer);\n            const intAddedPlayer = parseInt(addedPlayer.M);\n\n            const availablePlayers = originalAvailablePlayers.slice(0);\n            let droppedPlayerIndex = 0;\n            let availDroppedPlayerIndex = -1;\n\n            const droppedPlayer = roster.find((player, i) => {\n                if (player.M === intChosenPlayer) {\n                    droppedPlayerIndex = i;\n                    return player;\n                };\n            });\n            availablePlayers.find((player, i) => {\n                if (player.M === intAddedPlayer) {\n                    availDroppedPlayerIndex = i;\n                };\n            });\n\n            //Remove the player they chose from the array and then save it down into state\n            if (availDroppedPlayerIndex >= 0) {\n                availablePlayers.splice(availDroppedPlayerIndex, 1);\n            };\n            if (position === `Flex`) {\n                const { RBCount, WRCount } = this.countLogic(originalRoster);\n                if (RBCount === 3) {\n                    if (addedPlayer.P === `RB`) {\n                        roster[droppedPlayerIndex] = { P: addedPlayer.P, M: addedPlayer.M, N: addedPlayer.N, T: addedPlayer.T };\n                        roster.pop();\n                    } else {\n                        if (droppedPlayerIndex === 5) {\n                            roster[droppedPlayerIndex] = { P: addedPlayer.P, M: addedPlayer.M, N: addedPlayer.N, T: addedPlayer.T };\n                            roster.pop();\n                        } else {\n                            roster[droppedPlayerIndex] = { P: roster[5].P, M: roster[5].M, N: roster[5].N, T: roster[5].T };\n                            roster[5] = { P: addedPlayer.P, M: addedPlayer.M, N: addedPlayer.N, T: addedPlayer.T };\n                            roster.pop();\n                        };\n                    };\n                } else if (WRCount === 3) {\n                    if (addedPlayer.P === `WR`) {\n                        roster[droppedPlayerIndex] = { P: addedPlayer.P, M: addedPlayer.M, N: addedPlayer.N, T: addedPlayer.T };\n                    } else {\n                        if (droppedPlayerIndex === 5) {\n                            roster[droppedPlayerIndex] = { P: addedPlayer.P, M: addedPlayer.M, N: addedPlayer.N, T: addedPlayer.T };\n                            roster.pop();\n                        } else {\n                            roster[droppedPlayerIndex] = { P: roster[5].P, M: roster[5].M, N: roster[5].N, T: roster[5].T };\n                            roster[5] = { P: addedPlayer.P, M: addedPlayer.M, N: addedPlayer.N, T: addedPlayer.T };\n                            roster.pop();\n                        };\n                    };\n                };\n            } else {\n                roster[droppedPlayerIndex] = { P: addedPlayer.P, M: addedPlayer.M, N: addedPlayer.N, T: addedPlayer.T };\n                roster.pop();\n            };\n\n            //Add the player they dropped back to the available list of players\n            if (droppedPlayer.P === this.state.positionSelect) {\n                availablePlayers.unshift(droppedPlayer);\n            };\n\n            //Now we make one final check before moving things along. If everything is done right above this should be simple.\n            const checkRoster = this.checkRoster(roster);\n\n            //If the check failed, then we will have an issue and are going to revert the state back to the previous point\n            if (checkRoster) {\n                //We take the array of player IDs that are on the user roster and sort them\n                this.setState({ userRoster: roster });\n\n                //We need to new array to get the new player added and the old player so we can pull them out of the usedPlayersArray in the DB\n                this.saveRosterToDb(roster, chosenPlayer, intAddedPlayer, false);\n\n                this.setState({ availablePlayers: availablePlayers });\n            } else {\n                Alert.fire({\n                    type: 'warning',\n                    title: 'Roster Save Error!',\n                    text: 'Something went wrong with saving your roster! Please refresh and try again',\n                    confirmButtonColor: '#3085d6',\n                    confirmButtonText: 'Take me back'\n                });\n                this.setState({ userRoster: originalRoster });\n            };\n        } else if (chosenPlayer === undefined) {\n            //This is if the player has chosen to cancel out of the box above. We reload the old state to remove the player they just added\n            this.setState({ userRoster: originalRoster, availablePlayers: originalAvailablePlayers });\n        } else {\n            //This is if the player doesn't select one of the players and just presses accept\n            await Alert.fire(`You must pick one or cancel`)\n            this.tooManyPlayers(originalRoster, roster, position, originalAvailablePlayers);\n        };\n    };\n\n    checkRoster = (roster) => {\n        //This is a true false check to verify the roster data before saving it to the database\n        let response = true;\n        let QBCount = 0;\n        let RBCount = 0;\n        let WRCount = 0;\n        let TECount = 0;\n        let KCount = 0;\n\n        //We then go through the current user roster and populate it with data to sort it and get all the players\n        for (let i = 0; i < roster.length; i++) {\n            const position = roster[i].P;\n            //For the RB And WR positions, there are three options each they can be in\n            //RB/WR 1 & 2 as well as a flex position. All of which are undefined because we cannot have duplicate keys in an object\n            //We use a switch statement for WR and RB and start pulling the data into the fake roster\n            if (position === `RB`) {\n                RBCount++;\n            } else if (position === `WR`) {\n                WRCount++;\n            } else if (position === `QB`) {\n                QBCount++;\n            } else if (position === `TE`) {\n                TECount++;\n            } else if (position === `K`) {\n                KCount++;\n            };\n        };\n\n        //This checks if the player has too many of any one position or if their overall roster is over 8\n        if (QBCount > 1 || RBCount > 3 || WRCount > 3 || (RBCount + WRCount) > 5 || TECount > 1 || KCount > 1 || roster.length > 8) {\n            response = false;\n        };\n\n        return response;\n    };\n\n    saveRosterToDb = async (roster, droppedPlayer, addedPlayer) => {\n        this.loading()\n        axios.put(`/api/updateUserRoster`,\n            { userId: this.props.userId, roster, droppedPlayer, addedPlayer, week: this.state.weekSelect, season: this.props.season, groupId: this.props.match.params.groupId })\n            .then(res => {\n                this.doneLoading();\n                this.setState({ userRoster: res.data })\n                return;\n            }).catch(err => {\n                console.log(err)//TODO Better error handling\n            });\n    };\n\n    checkLockPeriod = async () => {\n        const response = await axios.get(`/api/checkLockPeriod`);\n        if (response.data.LW === 0) {\n            return true;\n        };\n\n        if (this.state.weekOnPage <= response.data.LW) {\n            return false;\n        };\n\n        return true;\n    };\n\n    positionSearch = (e) => {\n        e.preventDefault();\n\n        this.loading();\n        const userId = this.props.userId;\n        axios.get(`/api/availablePlayers`,\n            { params: { userId, searchedPosition: this.state.positionSelect, season: this.props.season, groupId: this.props.match.params.groupId } })\n            .then(res => {\n                const { usedPlayers, positionSelect } = this.state;\n                this.setState({ availablePlayers: res.data });\n                this.setState({ currentPositionUsedPlayers: usedPlayers[positionSelect] })\n                this.doneLoading();\n            });\n    };\n\n    customPlayerSearch = (e) => {\n        e.preventDefault();\n\n        console.log(this.state.playerSearch);\n    };\n\n    customSeasonWeekSearch = (e) => {\n        e.preventDefault();\n\n        const userRoster = [];\n\n        this.setState({ userRoster })\n\n        this.getRosterData(this.state.weekSelect, this.props.season);\n    };\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    addPlayerToRoster = (newRoster, addedPlayer) => {\n        const sortedUpdatedRoster = newRoster\n        const addedPosition = addedPlayer.P;\n        if (addedPosition === `RB`) {\n            if (sortedUpdatedRoster[1] === 0) {\n                sortedUpdatedRoster[1] = addedPlayer;\n            } else if (sortedUpdatedRoster[2] === 0) {\n                sortedUpdatedRoster[2] = addedPlayer;\n            } else if (sortedUpdatedRoster[5] === 0) {\n                sortedUpdatedRoster[5] = addedPlayer;\n            } else {\n                sortedUpdatedRoster.push(addedPlayer);\n            };\n        } else if (addedPosition === `WR`) {\n            if (sortedUpdatedRoster[3] === 0) {\n                sortedUpdatedRoster[3] = addedPlayer;\n            } else if (sortedUpdatedRoster[4] === 0) {\n                sortedUpdatedRoster[4] = addedPlayer;\n            } else if (sortedUpdatedRoster[5] === 0) {\n                sortedUpdatedRoster[5] = addedPlayer;\n            } else {\n                sortedUpdatedRoster.push(addedPlayer);\n            };\n        } else if (addedPosition === `QB`) {\n            if (sortedUpdatedRoster[0] === 0) {\n                sortedUpdatedRoster[0] = addedPlayer;\n            } else {\n                sortedUpdatedRoster.push(addedPlayer);\n            };\n        } else if (addedPosition === `TE`) {\n            if (sortedUpdatedRoster[6] === 0) {\n                sortedUpdatedRoster[6] = addedPlayer;\n            } else {\n                sortedUpdatedRoster.push(addedPlayer);\n            };\n        } else if (addedPosition === `K`) {\n            if (sortedUpdatedRoster[7] === 0) {\n                sortedUpdatedRoster[7] = addedPlayer;\n            } else {\n                sortedUpdatedRoster.push(addedPlayer);\n            };\n        };\n\n        return sortedUpdatedRoster;\n    }\n\n    addDropPlayer = async (mySportsId, addOrDrop) => {\n        if (!this.state.currentUser) {\n            Alert.fire({\n                title: `Not your roster!`,\n                type: `warning`,\n            });\n            return;\n        };\n        const isLocked = await this.checkLockPeriod();\n        if (!isLocked) {\n            Alert.fire({\n                title: `Peroid is locked!`,\n                type: `warning`,\n                text: `Week ${this.state.weekOnPage} is locked. Please search a different week`,\n            });\n            return;\n        };\n\n        const newAvailablePlayers = this.state.availablePlayers.slice(0);\n        let newRoster = this.state.userRoster.slice(0);\n\n        if (addOrDrop === `add`) {\n            let addedPlayerIndex = 0;\n\n            const addedPlayer = newAvailablePlayers.find((player, i) => {\n                if (player.M === mySportsId) {\n                    addedPlayerIndex = i;\n                    return player;\n                };\n            });\n\n            newAvailablePlayers.splice(addedPlayerIndex, 1);\n            newRoster = this.addPlayerToRoster(newRoster, addedPlayer)\n\n            const needToSave = this.countRoster(this.state.userRoster, newRoster, this.state.availablePlayers, addedPlayer);\n            const correctRoster = this.checkRoster(newRoster);\n\n            if (correctRoster && needToSave) {\n                this.setState({ availablePlayers: newAvailablePlayers });\n                this.saveRosterToDb(newRoster, 0, addedPlayer.M, true);\n            };\n        } else if (addOrDrop === `drop`) {\n            let droppedPlayerIndex = 0;\n            const droppedPlayer = newRoster.find((player, i) => {\n                if (player.M === mySportsId) {\n                    droppedPlayerIndex = i;\n                    return player;\n                };\n            });\n\n            newRoster.splice(droppedPlayerIndex, 1);\n            newAvailablePlayers.unshift(droppedPlayer);\n\n            this.setState({ availablePlayers: newAvailablePlayers });\n            this.saveRosterToDb(newRoster, mySportsId, false);\n\n        };\n    };\n\n    render() {\n        return (\n            <div>\n                <div className='centerText headerFont userNameRow'>\n                    {this.state.usernameOfPage}'s Roster\n                </div>\n                <div className='rosterContainer'>\n                    <div className='rosterCol'>\n                        <div className='searchRow'>\n                            Change Week\n                            <WeekSearch weekSelect={this.state.weekSelect} handleChange={this.handleChange} customSeasonWeekSearch={this.customSeasonWeekSearch} />\n                        </div>\n                        <div className='sectionHeader'>\n                            Week {this.state.weekOnPage} Roster\n                        </div>\n                        <RosterDisplay\n                            groupPositions={this.state.groupPositions}\n                            addDropPlayer={this.addDropPlayer}\n                            roster={this.state.userRoster || {}}\n                        />\n                    </div>\n                    <div className='rosterCol'>\n                        <div className='searchRow'>\n                            Position Search\n                            <PositionSearch positionSelect={this.state.positionSelect} handleChange={this.handleChange} positionSearch={this.positionSearch} />\n                        </div>\n                        <div className='sectionHeader'>\n                            Available Players\n                        </div>\n                        {this.state.availablePlayers.map((player, i) => (\n                            <PlayerDisplayRow player={player} key={i} addDropPlayer={this.addDropPlayer} evenOrOddRow={i % 2} />\n                        ))}\n                    </div>\n                    <div className='rosterCol'>\n                        <div className='searchRow'>\n                            Player Search\n                            <PlayerSearch playerSearch={this.state.playerSearch} handleChange={this.handleChange} customPlayerSearch={this.customPlayerSearch} />\n                        </div>\n                        <div className='sectionHeader'>\n                            Used Players\n                        </div>\n                        {this.state.currentPositionUsedPlayers.map((player, i) => (\n                            <PlayerDisplayRow player={player} key={i} evenOrOddRow={i % 2} />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};\n\nconst CurrentRosterRow = (props) => (\n    <div className={props.evenOrOddRow === 0 ? 'playerRow' : 'playerRow oddRow'}>\n        <div className='positionBox'>\n            {props.position}\n        </div>\n        {props.player ?\n            <div className='playerContainer'>\n                {props.player.N &&\n                    <div className='playerCol'>\n                        {props.player.N}\n                    </div>\n                }\n                {props.player.T &&\n                    <div className='teamCol'>\n                        {props.player.T}\n                    </div>\n                }\n                {props.player.score ?\n                    <div className='scoreCol'>\n                        {props.player.score}\n                    </div>\n                    :\n                    props.addDropPlayer &&\n                    <button className='addDropButton btn btn-outline-success btn-sm' onClick={() => props.addDropPlayer(props.player.M, 'drop')}>\n                        Drop\n                    </button>\n                }\n            </div>\n            : ``\n        }\n    </div>\n);\n\nconst PlayerDisplayRow = (props) => (\n    <div className={props.evenOrOddRow === 0 ? 'playerRow playerContainer' : 'playerRow playerContainer oddRow'}>\n        <div className='playerCol'>\n            {props.player.N && props.player.N}\n        </div>\n        <div className='teamCol'>\n            {props.player.T && props.player.T}\n        </div>\n        <div className='posCol'>\n            {props.player.P && props.player.P}\n        </div>\n        {props.addDropPlayer &&\n            <button className='addDropButton btn btn-outline-success btn-sm' onClick={() => props.addDropPlayer(props.player.M, 'add')}>\n                Add\n            </button>\n        }\n    </div>\n);\n\nconst RosterDisplay = (props) => (\n    <Fragment>\n        {props.groupPositions.map((position, i) => (\n            <CurrentRosterRow\n                key={i}\n                position={position.N}\n                player={props.roster[i]}\n                addDropPlayer={props.addDropPlayer}\n                evenOrOddRow={i % 2}\n            />\n        ))}\n        {props.UID &&\n            <div className='usedPlayerButton'>\n                <Link to={`/usedPlayers/${props.UID}`}>\n                    <button className='btn btn-info'>\n                        {props.UN}'s used Players\n                    </button>\n                </Link>\n            </div>\n        }\n    </Fragment>\n);\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Roster);\nexport { RosterDisplay, PlayerDisplayRow };","import React from 'react';\nimport 'react-table/react-table.css';\n\nimport './leaderBoardStyle.css'\n\nconst Leaderboard = (props) => (\n    <div className='leaderboardContainter'>\n        <div className='leaderboard'>\n            <div className='leaderboardHeader'>\n                <span className='headerText leftHeader'>\n                    {props.groupName}\n                </span>\n                <span className='leaderboardTitle'>\n                    Leaderboard\n                </span>\n                <span className='headerText rightHeader'>\n                    Week {props.week}\n                </span>\n            </div>\n            <div className='leaderboardRow'>\n                <div className='firstCol'>\n                    Username\n                </div>\n                <div className='secondCol'>\n                    Last Week's Score\n                </div>\n                <div className='thirdCol'>\n                    Total Score\n                </div>\n            </div>\n            {props.leaderboard &&\n                props.leaderboard.map((user, i) => (\n                    <div className={i % 2 ? 'leaderboardRow' : 'leaderboardRow oddRow'} key={user.UN}>\n                        <div className='firstCol'>\n                            {user.UN}\n                        </div>\n                        <div className='secondCol'>\n                            {user.W}\n                        </div>\n                        <div className='thirdCol'>\n                            {user.TS}\n                        </div>\n                    </div>\n                ))}\n        </div>\n    </div>\n)\n\n\nexport default Leaderboard;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withAuthorization } from '../Session';\nimport { RosterDisplay } from '../Roster';\nimport { WeekSearch } from '../Roster/SearchDropdowns';\n\nimport './homeStyle.css';\nimport Leaderboard from './Leaderboard';\n\n//Stateful component to allow the grouplist to properly populate\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userDisplayed: '',\n            userIdDisplayed: '',\n            groupRosters: [],\n            weekSelect: 1,\n            groupPositions: [],\n            leaderboard: []\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.week && this.props.season) {\n            this.setState({ weekSelect: this.props.week });\n            this.getLeaderBoard(this.props.season, this.props.week, this.props.group._id);\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.week !== prevProps.week) {\n            this.setState({ weekSelect: this.props.week });\n            this.getLeaderBoard(this.props.season, this.props.week, this.props.group._id);\n        };\n    };\n\n    getLeaderBoard(season, week, groupId) {\n        //Sending true to pull back the leaderboard as well\n        axios.get(`/api/getAllRostersForGroup/${season}/${week}/${groupId}/true`)\n            .then(res => {\n                this.setState({ groupRosters: res.data.rosters, groupPositions: res.data.groupPositions, leaderboard: res.data.leaderboard });\n                return;\n            });\n    };\n\n    updateRosterWeek(season, week, groupId) {\n        axios.get(`/api/getAllRostersForGroup/${season}/${week}/${groupId}/false`)\n            .then(res => {\n                this.setState({ groupRosters: res.data.rosters });\n                return;\n            });\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    customSeasonWeekSearch = (e) => {\n        e.preventDefault();\n\n        this.updateRosterWeek(this.props.season, this.state.weekSelect, this.props.group._id);\n    };\n\n    render() {\n        const weekForLeaderboard = this.props.week === 0 ? 1 : this.props.week;\n        return (\n            <div className='wrapper'>\n                <Leaderboard\n                    week={weekForLeaderboard}\n                    season={this.props.season}\n                    leaderboard={this.state.leaderboard}\n                    groupName={this.props.group.N}\n                />\n                <div className='weekSearchOnHome'>\n                    <div className='weekDisplay'>\n                        Week Shown: {this.state.weekSelect}\n                    </div>\n                    <div className='weekSearchInputOnHome'>\n                        <WeekSearch handleChange={this.handleChange} customSeasonWeekSearch={this.customSeasonWeekSearch} weekSelect={this.state.weekSelect} />\n                    </div>\n                </div>\n                <div>\n                    {this.state.groupRosters.map(roster =>\n                        <div key={roster.UID} className='homePageRoster'>\n                            <div className='userNameOnRoster'>{roster.UN}</div>\n                            <RosterDisplay\n                                groupPositions={this.state.groupPositions}\n                                roster={roster.R}\n                                UN={roster.UN}\n                                UID={roster.UID}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\n\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\n\nconst inputStyle = {\n    width: '35%',\n    height: '40px',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n};\n\nconst labelStyle = {\n    marginBottom: '0px',\n    fontSize: '20px'\n};\n\nconst initalState = {\n    password: '',\n    passwordConfirm: '',\n    error: null,\n    passwordValid: false,\n    validMessage: []\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initalState };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        //Checks if the password they inputted is correct. If it isn't it will not submit\n        if (this.checkValidInput()) {\n            const { password } = this.state;\n\n            this.props.firebase\n                .doPasswordUpdate(password)\n                .then(() => {\n                    this.setState({ ...initalState });\n                    this.props.history.push(Routes.home);\n                })\n                .catch(error => {\n                    this.setState({ error });\n                });\n        }\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    }\n\n    //Field name to keep validation consistant, but there's only password here\n    validateForm = (fieldName, value) => {\n        let validCheck;\n        let checkPassword = value.length >= 6;\n        let noSpacesInPassword = value.match(/^\\S*$/);\n        validCheck = checkPassword && noSpacesInPassword ? true : false;\n        this.setState({ passwordValid: validCheck });\n    }\n\n    render() {\n        const { password, passwordConfirm, error, validMessage } = this.state;\n\n        const isInvalid =\n            password !== passwordConfirm || password === '';\n\n        return (\n            <div>\n                <h3>Update Password:</h3>\n                <br />\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n                <Form onSubmit={this.handleSubmit}>\n                    {error && <p>{error.message}</p>}\n                    <Label style={labelStyle} htmlFor='password'>New Password:</Label>\n                    <FormGroup>\n                        <Input\n                            style={inputStyle}\n                            name='password'\n                            value={password}\n                            onChange={this.handleChange}\n                            type='password'\n                            placeholder='New Password'\n                        />\n                    </FormGroup>\n\n                    <Label style={labelStyle} htmlFor='passwordConfirm'>Confirm Password:</Label>\n                    <FormGroup>\n                        <Input\n                            style={inputStyle}\n                            name='passwordConfirm'\n                            value={passwordConfirm}\n                            onChange={this.handleChange}\n                            type='password'\n                            placeholder='Confirm New Password'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Button\n                            color='primary'\n                            disabled={isInvalid}\n                            type='submit'>\n                            Update Password\n                            </Button>\n                    </FormGroup>\n\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(compose(withRouter, withFirebase)(PasswordChangeForm));","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from '../Session';\nimport PasswordChangeForm from '../SignInOut/PasswordChange';\nimport axios from 'axios';\nimport { Button, Label, Input, } from \"reactstrap\";\n\nconst inputStyle = {\n    width: '35%',\n    height: '40px',\n    fontSize: '16px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '10px'\n};\n\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nconst buttonStyle = {\n    marginBottom: '25px'\n};\n\nconst centerText = {\n    textAlign: 'center'\n};\n\nconst updateProfileStyle = {\n    fontSize: '20px'\n};\n\nconst header = {\n    marginTop: '25px',\n}\n\nconst profileDisplayStyle = {\n    fontSize: '16px'\n};\n\nconst initialUpdateState = {\n    username: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    emailValid: false,\n    usernameValid: false,\n    validMessage: ''\n};\n\nconst initialProfileState = {\n    dbUsername: '',\n    dbEmail: '',\n    dbFirstname: '',\n    dbLastname: '',\n    isCurrentUser: false\n};\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props)\n\n        //Listed twice as to not change the info on the profile when they begin updating it\n        this.state = { ...initialProfileState };\n    };\n\n    componentDidMount() {\n        const userID = this.props.match.params.userID;\n        this.getUserData(userID);\n        this.checkCurrentUser(userID);\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID || this.props.userID !== prevProps.userID) {\n            const userID = this.props.match.params.userID;\n            this.getUserData(userID);\n            this.checkCurrentUser(userID);\n        };\n    };\n\n    checkCurrentUser = (userIDFromURL) => {\n        if (this.props.userID === userIDFromURL) {\n            this.setState({\n                isCurrentUser: true\n            })\n        };\n    };\n\n    updatedProfile = () => {\n        this.getUserData(this.props.match.params.userID);\n    };\n\n    getUserData = async (userID) => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                dbUsername: dbResponse.data.local.username,\n                dbEmail: dbResponse.data.local.email,\n                dbFirstname: dbResponse.data.local.firstname,\n                dbLastname: dbResponse.data.local.lastname,\n            });\n        };\n    };\n\n    render() {\n        const { isCurrentUser, dbUsername, dbEmail, dbFirstname, dbLastname } = this.state;\n\n        return (\n            <div style={centerText}>\n                <h1 style={header}>{dbUsername}'s Profile</h1>\n                <div style={profileDisplayStyle}>Username: {dbUsername}</div>\n                <div style={profileDisplayStyle}>Email: {dbEmail}</div>\n                <div style={profileDisplayStyle}>Firstname: {dbFirstname}</div>\n                <div style={profileDisplayStyle}>Lastname: {dbLastname}</div>\n\n                {/* If the user is the current user logged in they can update their profile here */}\n                {isCurrentUser &&\n                    <Fragment>\n                        <UpdateInformationForm userID={this.props.userID} updatedProfile={this.updatedProfile} />\n                        <br />\n                        <PasswordChangeForm />\n                    </Fragment>\n                }\n            </div>\n        );\n    };\n};\n\n//RE AUTH A USER\n// https://firebase.google.com/docs/auth/web/manage-users#re-authenticate_a_user\n\nclass UpdateInformationForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { ...initialUpdateState };\n    };\n\n    handleSubmit = async (fieldSubmitted) => {\n\n        if (this.checkValidInput(fieldSubmitted)) {\n            const value = this.state[fieldSubmitted];\n            const userID = this.props.userID;\n            const request = fieldSubmitted;\n\n            const dbResponse = await axios.put(`/api/updateuser`, { userID, value, request });\n\n            if (dbResponse.status === 200) {\n                this.props.updatedProfile();\n                this.setState({ ...initialUpdateState });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    checkValidInput = (fieldSubmitted) => {\n        if (fieldSubmitted === 'email' && !this.state.emailValid) {\n            this.setState({ validMessage: `Email entered is invalid` });\n            return false;\n        };\n\n        if (fieldSubmitted === 'username' && !this.state.usernameValid) {\n            this.setState({ validMessage: `Please ensure username is between 3 & 16 characters & it only contains letters, numbers, underscores & dashes` });\n            return false;\n        };\n\n        return true;\n    };\n\n    render() {\n        const { username, email, firstname, lastname, validMessage } = this.state;\n\n        const usernameIsInvalid = username === '';\n        const emailIsInvalid = email === '';\n        const firstnameIsInvalid = firstname === '';\n        const lastnameIsInvalid = lastname === '';\n\n        return (\n            <div style={updateProfileStyle}>\n                {validMessage && <p>{validMessage}</p>}\n                <br />\n                <Label style={labelStyle}>\n                    Username:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='username'\n                    placeholder='Update Username'\n                    value={username}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={usernameIsInvalid}\n                    onClick={() => this.handleSubmit('username')}>\n                    Update Username\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    Email:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='email'\n                    placeholder='Update Email'\n                    value={email}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={emailIsInvalid}\n                    onClick={() => this.handleSubmit('email')}>\n                    Update Email\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    First Name:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='firstname'\n                    placeholder='Update Firstname'\n                    value={firstname}\n                    onChange={this.handleChange}></Input>\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={firstnameIsInvalid}\n                    onClick={() => this.handleSubmit('firstname')}>\n                    Update Firstname\n                </Button>\n\n                <br />\n\n                <Label style={labelStyle}>\n                    Last Name:\n                </Label>\n                <Input\n                    style={inputStyle}\n                    type='text'\n                    name='lastname'\n                    placeholder='Update Lastname'\n                    value={lastname}\n                    onChange={this.handleChange} />\n                <Button\n                    color='primary'\n                    style={buttonStyle}\n                    disabled={lastnameIsInvalid}\n                    onClick={() => this.handleSubmit('lastname')}>\n                    Update Lastname\n                </Button>\n                <hr />\n            </div >\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserProfile);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Container, Row, Col } from 'reactstrap';\nimport { RosterDisplay } from '../Roster';\nimport 'react-table/react-table.css';\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nimport './seasonLongScoreStyle.css';\n\n\nconst Alert = withReactContent(Swal);\n\nclass SeasonLongScore extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            displayReadyRosters: []\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) {\n            this.seasonData(this.props.match.params.userId, this.props.season);\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.season !== `` && this.props.match.params.userId !== ``) {\n            this.seasonData(this.props.match.params.userId, this.props.season);\n\n        }\n    }\n\n    seasonData(userId, season) {\n        this.loading();\n        axios.get(`/api/seasonLongScore/${userId}/${season}`)\n            .then(res => {\n                this.doneLoading();\n                this.sortRoster(res.data);\n            }).catch(err => {\n                console.log(`roster data error`, err); //TODO better error handling\n            });\n    };\n\n    sortRoster(seasonRostersArray) {\n        const displayReadyRosters = [];\n        for (let i = 0; i < seasonRostersArray.length; i++) {\n            displayReadyRosters[i] = this.sortWeek(seasonRostersArray[i]);\n        };\n        this.setState({ displayReadyRosters });\n    };\n\n    sortWeek(weekArray) {\n        const displayReadyRoster = {}; //It's saved as an object in the database\n\n        //Here we iterate through the roster of the player and put them into an object for the order we want\n        for (const player of weekArray) {\n            const position = player.position;\n            //If the position is QB, TE, or K then we can just put them directly in\n            if (position === `QB`) {\n                displayReadyRoster.QB = player;\n                //If it's RB or WR then we need to assign it manually to the 1, 2 and flex spots\n                //First we need to check the RB/WR 1 & 2 spots then assign it into the flex spot\n            } else if (position === `RB`) {\n                if (!displayReadyRoster.RB1) {\n                    displayReadyRoster.RB1 = player;\n                } else if (!displayReadyRoster.RB2) {\n                    displayReadyRoster.RB2 = player;\n                } else if (!displayReadyRoster.Flex) {\n                    displayReadyRoster.Flex = player;\n                }\n            } else if (position === `WR`) {\n                if (!displayReadyRoster.WR1) {\n                    displayReadyRoster.WR1 = player;\n                } else if (!displayReadyRoster.WR2) {\n                    displayReadyRoster.WR2 = player;\n                } else if (!displayReadyRoster.Flex) {\n                    displayReadyRoster.Flex = player;\n                };\n            } else if (position === `TE`) {\n                displayReadyRoster.TE = player;\n            } else if (position === `K`) {\n                displayReadyRoster.K = player;\n            };\n        };\n\n        return displayReadyRoster;\n    };\n\n    loading() {\n        Alert.fire({\n            title: 'Loading',\n            text: 'Loading available players',\n            imageUrl: 'https://media.giphy.com/media/3o7aDczpCChShEG27S/giphy.gif',\n            imageWidth: 200,\n            imageHeight: 200,\n            imageAlt: 'Loading Football',\n            showConfirmButton: false,\n            showCancelButton: false\n        });\n    };\n\n    doneLoading() {\n        Alert.close()\n    };\n\n\n    render() {\n        const rosterPlayers = ['QB', 'RB1', 'RB2', 'WR1', 'WR2', 'Flex', 'TE', 'K'];\n\n        return (\n            <div>\n                <Container fluid={true}>\n                    <Row>\n                        {this.state.displayReadyRosters.map((weekRoster, i) => (\n                            //The +1 in the week is because arrays begin at 0\n                            <WeekDisplay weekRoster={weekRoster} week={i + 1} key={i} rosterPlayers={rosterPlayers} />\n                            // <RosterDisplay rosterPlayers={rosterPlayers} addDropPlayer={null} currentRoster={weekRoster} nameCol={'12'} />\n                        ))}\n                    </Row>\n                </Container>\n            </div >\n        );\n    };\n};\n\nconst WeekDisplay = (props) => (\n    <Col xs='3'>\n        <Row>\n            <Col xs='12' className={'weekHeader'}>\n                Week {props.week}\n            </Col>\n        </Row>\n        <RosterDisplay rosterPlayers={props.rosterPlayers} addDropPlayer={false} currentRoster={props.weekRoster} nameCol={'9'} scoreCol={'3'} />\n    </Col>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(SeasonLongScore);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Button, Row, Col } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst Alert = withReactContent(Swal);\n\nclass PlayerEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    };\n\n    loading() {\n        Alert.fire({\n            title: 'Loading',\n            text: 'Working your request',\n            imageUrl: 'https://media.giphy.com/media/3o7aDczpCChShEG27S/giphy.gif',\n            imageWidth: 200,\n            imageHeight: 200,\n            imageAlt: 'Loading Football',\n            showConfirmButton: false,\n            showCancelButton: false\n        });\n    };\n    doneLoading() {\n        Alert.close()\n    };\n\n    updateNFLRoster = () => {\n        this.loading();\n        axios.get(`/api/updateTeams`).then(response => {\n            this.doneLoading();\n            console.log(response.data);\n        });\n\n    };\n\n    getMassData = () => {\n        Alert.fire({\n            type: `warning`,\n            title: `Are you sure?`,\n            text: `It will take a LONG time`,\n            showCancelButton: true,\n        }).then(async result => {\n            if (result.value) {\n                Alert.fire(`Success`, `This will be a while. Go play some games?`, `success`);\n                this.loading(); // This successfully updates the database but doneLoading doesn't work\n                const response = await axios.get(`/api/massPlayerUpdate/${this.props.season}/`);\n                this.doneLoading();\n                console.log(response);\n            };\n        });\n    };\n\n    getWeeklyData = async () => {\n        this.loading();\n        try {\n            await axios.get(`/api/updatePlayers/${this.props.season}/${this.props.week}`);\n\n            this.doneLoading();\n        } catch (err) {\n            console.log(err)\n        };\n        this.doneLoading();\n    };\n\n    rankPlayers = async () => {\n        try {\n            await axios.get(`/api/rankPlayers/${this.props.season}/${this.props.week}/${this.props.groupId}`)\n        } catch (err) {\n            console.log(err);\n        };\n    };\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <Button color='warning' onClick={this.getMassData}>\n                        Mass Update All Players\n                    </Button>\n                    <br />\n                    <br />\n                    <Button color='secondary' onClick={this.updateNFLRoster}>\n                        Update NFL Roster\n                    </Button>\n                    <br />\n                    <br />\n                    <Button color='secondary' onClick={this.getWeeklyData}>\n                        Update Get Weekly Data\n                    </Button>\n                    <br />\n                    <br />\n                    <Button color='primary' onClick={this.rankPlayers}>\n                        Rank Players\n                    </Button>\n                </Col>\n            </Row>\n        );\n    };\n\n\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(PlayerEditor);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Input, Form, FormGroup, Button, Row, Col } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport ReactTable from 'react-table';\n\nimport 'react-table/react-table.css';\nimport './userEditorStyle.css';\n\nconst Alert = withReactContent(Swal);\n\nclass UserEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSelected: false,\n            selectedUser: {\n                username: ''\n            },\n            groupSelect: ``,\n            userArray: [],\n            loading: true,\n            QB: 0,\n            RB1: 0,\n            RB2: 0,\n            WR1: 0,\n            WR2: 0,\n            Flex: 0,\n            TE: 0,\n            K: 0\n        };\n    };\n\n    componentDidMount() {\n        axios.get(`/api/getAllUsers`).then(res => {\n            this.setState({ loading: false, userArray: res.data });\n        });\n    };\n\n    loading() {\n        Alert.fire({\n            title: 'Loading',\n            text: 'Working your request',\n            imageUrl: 'https://media.giphy.com/media/3o7aDczpCChShEG27S/giphy.gif',\n            imageWidth: 200,\n            imageHeight: 200,\n            imageAlt: 'Loading Football',\n            showConfirmButton: false,\n            showCancelButton: false\n        });\n    };\n    doneLoading() {\n        Alert.close()\n    };\n\n    dummyRoster = async () => {\n        const dummyRoster = [\n            this.state.QB,\n            this.state.RB1,\n            this.state.RB2,\n            this.state.WR1,\n            this.state.WR2,\n            this.state.Flex,\n            this.state.TE,\n            this.state.K\n        ];\n\n        await axios.put(`/api/dummyRoster/`,\n            { userId: this.state.selectedUser._id, groupId: this.state.groupSelect, season: this.props.season, week: this.props.week, dummyRoster });\n        // this.setState({ QB: 0, RB1: 0, RB2: 0, WR1: 0, WR2: 0, Flex: 0, TE: 0, K: 0 })\n    };\n\n    createRoster = async () => {\n        const dbResponse = await axios.post(`/api/createRoster/${this.state.selectedUser}`);\n        console.log(dbResponse)\n    };\n\n    //This is to handle the change for the Input Type in the position search below\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    selectUser = (user) => {\n        this.setState({ selectedUser: user, isSelected: true, groupSelect: user.groupList[0] })\n    };\n\n    calculateScores = async () => {\n        this.loading();\n        await axios.get(`/api/calculateScore/${this.props.season}/${this.props.week}/`);\n        this.doneLoading();\n    };\n\n    fillDummyRoster = () => {\n        this.setState({\n            QB: 7549,\n            RB1: 8285,\n            RB2: 9791,\n            WR1: 9952,\n            WR2: 7013,\n            Flex: 7380,\n            TE: 7299,\n            K: 6997\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col xs='6'>\n                        <SelectedUser selectedUser={this.state.selectedUser} />\n                    </Col>\n                    <Col xs='6'>\n                        {this.state.isSelected &&\n                            <Input value={this.state.groupSelect} type='select' name='groupSelect' id='groupSelect' onChange={this.handleChange}>\n                                {this.state.selectedUser.groupList.map((group, i) =>\n                                    <option key={i}>{group}</option>)}\n                            </Input>\n                        }\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs='12'>\n                        <Button onClick={this.calculateScores} color='primary' className='calculateScoreButton'>\n                            Update Scores\n                        </Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Form onSubmit={this.dummyRoster}>\n                            <FormGroup>\n                                <Row>\n                                    <Col sm='12' md='6'>\n                                        <div className='playerIdInput'>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    QB\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.QB} type='text' name='QB' id='QB' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    RB1\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.RB1} type='text' name='RB1' id='RB1' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    RB2\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.RB2} type='text' name='RB2' id='RB2' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    WR1\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.WR1} type='text' name='WR1' id='WR1' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    WR2\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.WR2} type='text' name='WR2' id='WR2' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    Flex\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.Flex} type='text' name='Flex' id='Flex' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    TE\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.TE} type='text' name='TE' id='TE' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm='12' md='2' className='positionColumn'>\n                                                    K\n                                                </Col>\n                                                <Col sm='12' md='10'>\n                                                    <Input value={this.state.K} type='text' name='K' id='K' onChange={this.handleChange} />\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Col>\n                                    {this.state.isSelected &&\n                                        <Col sm='12' md='6'>\n                                            {/* If the admin hasn't yet selected a user then they will not be allowed to view */}\n                                            <Button onClick={this.fillDummyRoster} disabled={!this.state.selectedUser} className='userEditorButton'>\n                                                Fill Dummy Roster\n                                            </Button>\n                                            <Button color='secondary' onClick={this.dummyRoster} disabled={!this.state.selectedUser} className='userEditorButton'>\n                                                Submit Dummy Roster\n                                            </Button>\n                                            <Button color='info' onClick={this.createRoster} disabled={!this.state.selectedUser} className='userEditorButton rightButton'>\n                                                TODO Create User Roster\n                                        </Button>\n                                        </Col>\n                                    }\n                                </Row>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n                <UserTable userArray={this.state.userArray} loading={this.state.loading} selectUser={this.selectUser} />\n            </div>\n        );\n    };\n};\n\nconst SelectedUser = (props) => {\n    return (\n        <div className='selectedUser'>\n            Selected User: <input value={props.selectedUser.username} type='text' disabled />\n        </div>\n    );\n};\n\nconst UserTable = (props) => {\n    return (\n        <Row>\n            <Col xs='12'>\n                <ReactTable\n                    data={props.userArray}\n                    columns={[\n                        { Header: 'Username', accessor: 'username', show: true },\n                        { Header: 'email', accessor: 'email', show: true },\n                        { Header: 'Id', accessor: '_id', show: true }\n                    ]}\n                    loading={props.loading}\n                    filterable\n                    defaultPageSize={20}\n                    className=\"-highlight\"\n                    getTdProps={(state, rowInfo) => {\n                        return {\n                            onClick: () => {\n                                if (!rowInfo) { return };\n                                props.selectUser(rowInfo.original);\n                            }\n                        };\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserEditor);\n\n//These should really be taken together since they're used together\nexport { UserTable, SelectedUser };","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport { Label, Input, Container, Button, Row, Col } from 'reactstrap';\nimport * as Routes from '../../constants/routes';\nimport axios from 'axios';\n\nimport PlayerEditor from './PlayerEditor';\nimport UserEditor from './UserEditor';\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userEditor: false,\n            playerEditor: false,\n            weekSelect: 1,\n            seasonSelect: ``\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) { // season here because it's the last prop we pass in. Probably not the best way\n            this.checkAdminStatus(this.props.currentUser)\n            this.setState({ weekSelect: this.props.week, seasonSelect: this.props.season });\n        };\n    };\n\n    componentDidMount() {\n        if (typeof this.props.season !== `undefined`) {\n            this.setState({ seasonSelect: this.props.season });\n        };\n        if (typeof this.props.week !== `undefined`) {\n            this.setState({ weekSelect: this.props.week });\n        };\n        if (typeof this.props.currentUser !== `undefined`) {\n            this.checkAdminStatus(this.props.currentUser);\n        };\n    };\n\n    checkAdminStatus = (currentUser) => {\n        if (currentUser.isAdmin === false) {\n            this.props.history.push(Routes.home);\n        };\n    };\n\n    showPlayerEditor = () => {\n        this.setState({ playerEditor: true, userEditor: false })\n    };\n\n    showUserEditor = () => {\n        this.setState({ playerEditor: false, userEditor: true })\n    };\n\n    createAllRosters = async () => {\n        const dbResponse = await axios.post(`/api/createAllRosters/${this.state.seasonSelect}`);\n        console.log(dbResponse)\n    };\n\n    //This is to handle the change for the Input Type in the position search below\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    render() {\n        const { playerEditor, userEditor } = this.state;\n\n        return (\n            this.props.currentUser.isAdmin ?\n                <Container fluid={true}>\n                    <Row>\n                        <Col sm='12' md='3'>\n                            <Label for='seasonSelect'>Select Season</Label>\n                            <Input value={this.state.seasonSelect} type='select' name='seasonSelect' id='seasonSelect' onChange={this.handleChange}>\n                                <option>2019-2020-regular</option>\n                                <option>2020-2021-regular</option>\n                            </Input>\n                            <Label for='weekSelect'>Select Week</Label>\n                            <Input value={this.state.weekSelect} type='select' name='weekSelect' id='weekSelect' onChange={this.handleChange}>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                                <option>7</option>\n                                <option>8</option>\n                                <option>9</option>\n                                <option>10</option>\n                                <option>11</option>\n                                <option>12</option>\n                                <option>13</option>\n                                <option>14</option>\n                                <option>15</option>\n                                <option>16</option>\n                                <option>17</option>\n                            </Input>\n                            <br />\n                            <br />\n                            <Button color='primary' onClick={this.showPlayerEditor}>Player Editor</Button>\n                            <br />\n                            <br />\n                            <Button color='primary' onClick={this.showUserEditor}>User Editor</Button>\n                            <br />\n                            <br />\n                            <Button color='primary' onClick={this.createAllRosters}>Create All Rosters</Button>\n                        </Col>\n                        <Col sm='12' md='9'>\n                            {playerEditor &&\n                                <PlayerEditor week={this.state.weekSelect} season={this.state.seasonSelect} groupId={this.props.groupId} />\n                            }\n                            {userEditor &&\n                                <UserEditor week={this.state.weekSelect} season={this.state.seasonSelect} />\n                            }\n                        </Col>\n                    </Row>\n                </Container>\n                :\n                <div>\n                    {/* IF the user is not an admin, return a blank div so they can't see anything */}\n                </div>\n        )\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AdminPanel);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport * as Routes from '../../constants/routes';\nimport { compose } from 'recompose';\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst Alert = withReactContent(Swal);\n\nclass UpdateWeek extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dbPass: ``,\n            currentWeek: 1,\n            lockWeek: 0,\n            season: `2020-2021-regular`\n        };\n    };\n\n    updateWeekSeason = async () => {\n        if (this.state.dbPass === ``) {\n            this.handleWrongPass(`No!`);\n            return;\n        };\n        try {\n            const response = await axios.put(`/api/updateWeekSeason/${this.state.dbPass}/${this.state.season}/${this.state.currentWeek}/${this.state.lockWeek}`);\n            await Alert.fire(response.data)\n        } catch (err) {\n            this.handleWrongPass(`Get Outta Here!`);\n        };\n        this.setState({ dbPass: `` });\n    };\n\n    async handleWrongPass(message) {\n        await Alert.fire({\n            type: 'error',\n            title: message,\n            showConfirmButton: false,\n            showCancelButton: true,\n            cancelButtonText: 'X'\n        });\n        this.props.history.push(Routes.home);\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                Don't enter this if you don't know!\n                <div>\n                    Current Week\n                    <select value={this.state.week} onChange={this.handleChange} name='currentWeek'>\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                        <option value={4}>4</option>\n                        <option value={5}>5</option>\n                        <option value={6}>6</option>\n                        <option value={7}>7</option>\n                        <option value={8}>8</option>\n                        <option value={9}>9</option>\n                        <option value={10}>10</option>\n                        <option value={11}>11</option>\n                        <option value={12}>12</option>\n                        <option value={13}>13</option>\n                        <option value={14}>14</option>\n                        <option value={15}>15</option>\n                        <option value={16}>16</option>\n                        <option value={17}>17</option>\n                    </select>\n                </div>\n                <div>\n                    Lock Week\n                    <select value={this.state.week} onChange={this.handleChange} name='lockWeek'>\n                        <option value={0}>0</option>\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                        <option value={4}>4</option>\n                        <option value={5}>5</option>\n                        <option value={6}>6</option>\n                        <option value={7}>7</option>\n                        <option value={8}>8</option>\n                        <option value={9}>9</option>\n                        <option value={10}>10</option>\n                        <option value={11}>11</option>\n                        <option value={12}>12</option>\n                        <option value={13}>13</option>\n                        <option value={14}>14</option>\n                        <option value={15}>15</option>\n                        <option value={16}>16</option>\n                        <option value={17}>17</option>\n                    </select>\n                </div>\n                <div>\n                    <select value={this.state.season} onChange={this.handleChange} name='season'>\n                        <option value='2020-2021-regular'>2020-2021-regular</option>\n                        <option value='2021-2022-regular'>2021-2022-regular</option>\n                    </select>\n                </div>\n                <div>\n                    <input type='text' value={this.state.dbPass} name='dbPass' onChange={this.handleChange} />\n                </div>\n                <div>\n                    <button className='btn btn-info' onClick={this.updateWeekSeason}>\n                        Submit\n                </button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default compose(withRouter)(UpdateWeek);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\nimport { UserTable, SelectedUser } from './UserEditor';\nimport * as Routes from '../../constants/routes';\n\nimport './upgradeToAdmin.css';\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\n//Using Swal to display messages when add book button is hit\nconst Alert = withReactContent(Swal);\n\nclass UpgradeToAdmin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedUser: ``,\n            userArray: [],\n            loading: true,\n            dbPass: ``\n        };\n    };\n\n    componentDidMount() {\n        axios.get(`/api/getAllUsers`).then(res => {\n            this.setState({ loading: false, userArray: res.data });\n        });\n    };\n\n    selectUser = (id) => {\n        this.setState({ selectedUser: id })\n    };\n\n    upgradeToAdmin = async () => {\n        let serverResponse = {};\n        try {\n            serverResponse = await axios.put(`/api/updateUserToAdmin/${this.state.selectedUser._id}/${this.state.dbPass}`);\n            Alert.fire({\n                type: 'success',\n                text: serverResponse.data\n            });\n        } catch (err) {\n            this.handleWrongPass(`Get Outta Here!`);\n        };\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    async handleWrongPass(message) {\n        await Alert.fire({\n            type: 'error',\n            title: message,\n            showConfirmButton: false,\n            showCancelButton: true,\n            cancelButtonText: 'X'\n        });\n        this.props.history.push(Routes.home);\n    };\n\n    render() {\n        return (\n            <div className='upgradeCol'>\n                <SelectedUser selectedUser={this.state.selectedUser} />\n                <input type='text' name='dbPass' value={this.state.dbPass} onChange={this.handleChange} />\n                <Button className='adminButton' onClick={this.upgradeToAdmin} disabled={!this.state.selectedUser} >Upgrade to Admin</Button>\n                <UserTable userArray={this.state.userArray} loading={this.state.loading} selectUser={this.selectUser} />\n            </div>\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UpgradeToAdmin);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { PlayerDisplayRow } from '../Roster';\nimport 'react-table/react-table.css';\n\nimport './usedPlayerStyle.css';\n\nclass UsedPlayers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usedPlayers: {},\n            loading: false,\n            usernameOfPage: '',\n            displayPositions: [] //Figure out if we need to display them with a boolean\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.season !== '') {\n            this.getUsedPlayers();\n            this.getGroupPositionsForDisplay();\n            this.getCurrentUsername();\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.season !== prevProps.season) {\n            this.getUsedPlayers();\n            this.getGroupPositionsForDisplay();\n            this.getCurrentUsername();\n        };\n    };\n\n    getCurrentUsername() {\n        if (typeof this.props.username !== `undefined` && this.props.username !== ``) {\n            this.setState({ usernameOfPage: this.props.username })\n        } else {\n            axios.get(`/api/getUserById/${this.props.match.params.userId}`)\n                .then(res => {\n                    this.setState({ usernameOfPage: res.data.UN })\n                }).catch(err => {\n                    console.log(err); //TODO better error handling\n                });\n        };\n    };\n\n    getGroupPositionsForDisplay = () => {\n        axios.get(`/api/getGroupPositionsForDisplay/${this.props.match.params.groupId}`)\n            .then(res => {\n                this.setState({ displayPositions: res.data.forDisplay });\n            }).catch(err => {\n                console.log(err); //TODO better error handling\n            });\n    };\n\n    getUsedPlayers = () => {\n        this.setState({ loading: true });\n        axios.get(`/api/getUsedPlayers/${this.props.match.params.userId}/${this.props.season}/${this.props.match.params.groupId}`)\n            .then(res => {\n                this.setState({ usedPlayers: res.data, loading: false });\n            }).catch(err => {\n                console.log(err)//TODO Better error handling\n            });\n    };\n\n    render() {\n        const positions = [`QB`, `RB`, `WR`, `TE`, `K`, `D`]\n        return (\n            <div>\n                <div className='centerText titleMargin headerFont'>\n                    {this.state.usernameOfPage}'s Used Players\n                </div>\n                {positions.map(position => (\n                    <div key={position}>\n                        {this.state.usedPlayers[position] &&\n                            <div className='usedPosition'>\n                                <div className='sectionHeader'>\n                                    {position}\n                                </div>\n                                {this.state.usedPlayers[position].map((player, i) => (\n                                    <PlayerDisplayRow player={player} key={i} evenOrOddRow={i % 2} />\n                                ))}\n                            </div>\n                        }\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default UsedPlayers;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Button, Row, Col, Input } from 'reactstrap';\nimport * as Routes from '../../constants/routes';\nimport { compose } from 'recompose';\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst Alert = withReactContent(Swal);\n\nclass CreateAllGroup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: ``\n        };\n    };\n\n    CreateAllGroup = async () => {\n        if (this.state.password === ``) {\n            this.handleWrongPass(`No!`);\n            return;\n        };\n        try {\n            await axios.post(`/api/createAllGroup/${this.state.password}`);\n            console.log(`created`);\n        } catch (err) {\n            this.handleWrongPass(`Get Outta Here!`);\n        };\n        this.setState({ password: `` });\n    };\n\n    PurgeDB = async () => {\n        if (this.state.password === ``) {\n            this.handleWrongPass(`No!`);\n            return;\n        };\n        try {\n            await axios.post(`/api/purgeUserAndGroupDB/${this.state.password}`);\n            console.log(`purged`);\n        } catch (err) {\n            this.handleWrongPass(`Get Outta Here!`);\n        };\n        this.setState({ password: `` });\n    };\n\n    async handleWrongPass(message) {\n        await Alert.fire({\n            type: 'error',\n            title: message,\n            showConfirmButton: false,\n            showCancelButton: true,\n            cancelButtonText: 'X'\n        });\n        this.props.history.push(Routes.home);\n    };\n\n    //This is to handle the change for the Input Type in the position search below\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    render() {\n        return (\n            <Container fluid={true}>\n                <Row>\n                    <Col xs='12'>\n                        I'm watching you. Don't do this if you found this by accident.\n                        <br />\n                        <br />\n                        <Input value={this.state.password} type='text' name='password' onChange={this.handleChange} />\n                        <br />\n                        <Button onClick={this.CreateAllGroup}>Create General Group</Button>\n                        <br />\n                        <br />\n                        <Button onClick={this.PurgeDB}>Purge DB</Button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    };\n};\n\n\nexport default compose(withRouter)(CreateAllGroup);\n","import React from 'react';\nimport './404style.css';\nimport PoorBaby from './Champs.jpg'\n\nconst FourOFour = (props) => {\n    return (\n        <div className='fourOFour' >\n            <div className='fourOFourText'>404 - Route Not Found</div>\n            <div className='gloat'>\n                Hope you didn't get here like Rogers did\n                <br />\n                <br />\n                <img className='ripGod' src={PoorBaby} alt='Sore Losers' />\n            </div>\n        </div>\n    )\n}\n\nexport default FourOFour;","import React, { Fragment, Component } from 'react';\nimport * as Routes from './constants/routes';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { withFirebase } from './componenets/Firebase';\nimport axios from 'axios';\n\nimport SignInOut from './componenets/SignInOut';\nimport NavBar from './componenets/NavBar/NavBar';\nimport Home from './componenets/Home';\nimport UserProfile from './componenets/UserProfile/UserProfile';\nimport SeasonLongScore from './componenets/SeasonLongScore';\nimport Roster from './componenets/Roster';\nimport AdminPanel from './componenets/AdminPanel';\nimport UpdateWeek from './componenets/AdminPanel/UpdateWeek';\nimport UpgradeToAdmin from './componenets/AdminPanel/UpgradeToAdmin';\nimport UsedPlayers from './componenets/UsedPlayers';\nimport CreateAllGroup from './componenets/GroupPage/CreateAllGroup';\nimport FourOFour from './componenets/404/FourOFour';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n      currentUser: {},\n      currentWeek: 0,\n      currentSeason: ``,\n      groupList: [],\n      currentGroup: {},\n      positionOrder: [],\n    }\n\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.setState({ authUser });\n        this.isSignedIn(authUser.email);\n      } else {\n        this.setState({ authUser: null, currentUser: {} });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  };\n\n  isSignedIn = async (email) => {\n    const dbResponse = await axios.get(`/api/getUser/${email}`);\n    const currentUser = {\n      username: dbResponse.data.UN,\n      userId: dbResponse.data._id,\n      isAdmin: dbResponse.data.A,\n    };\n    const playerPositions = await axios.get(`/api/getPositionData`);\n\n    this.setState({\n      currentUser,\n      groupList: dbResponse.data.GL,\n      currentGroup: { N: dbResponse.data.GL[0].N, _id: dbResponse.data.GL[0]._id },\n      positionOrder: playerPositions.data\n    });\n    this.getSeasonAndWeek();\n  };\n\n  getSeasonAndWeek = async () => {\n    const seasonAndWeek = await axios.get(`/api/currentSeasonAndWeek`);\n    this.setState({ currentSeason: seasonAndWeek.data.season, currentWeek: seasonAndWeek.data.week })\n  };\n\n  render() {\n\n    return (\n\n      <BrowserRouter>\n        <Fragment>\n          {this.state.authUser &&\n            <NavBar\n              authUser={this.state.authUser}\n              groupId={this.state.currentGroup._id}\n              userId={this.state.currentUser.userId}\n            />\n          }\n          {/* <GroupBar\n            groupList={this.state.groupList}\n          /> */}\n          <Switch>\n            <Route\n              exact path={Routes.home}\n              render={() =>\n                <Home\n                  isAdmin={this.state.currentUser.isAdmin}\n                  season={this.state.currentSeason}\n                  group={this.state.currentGroup}\n                  week={this.state.currentWeek}\n                  positionOrder={this.state.positionOrder}\n                />}\n            />\n            <Route\n              path={Routes.adminPanel}\n              render={() =>\n                <AdminPanel\n                  currentUser={this.state.currentUser}\n                  week={this.state.currentWeek}\n                  season={this.state.currentSeason}\n                  groupId={this.state.currentGroup._id} />}\n            />\n            <Route\n              path={Routes.signin}\n              render={() =>\n                <SignInOut />}\n            />\n            <Route\n              path={Routes.signup}\n              render={() =>\n                <SignInOut />}\n            />\n            <Route\n              path={Routes.userProfile}\n              render={() =>\n                <UserProfile />}\n            />\n            <Route\n              path={Routes.seasonLongScore}\n              render={() =>\n                <SeasonLongScore\n                  season={this.state.currentSeason} />}\n            />\n            <Route\n              path={Routes.roster}\n              render={props =>\n                <Roster\n                  {...props}\n                  userId={this.state.currentUser.userId}\n                  week={this.state.currentWeek}\n                  season={this.state.currentSeason} />\n              }\n            />\n            <Route\n              path={Routes.upgradeToAdmin}\n              render={() =>\n                <UpgradeToAdmin />}\n            />\n            <Route\n              path={Routes.usedPlayers}\n              render={props =>\n                <UsedPlayers\n                  {...props}  //Need to pass down the props spread to have access to the URL\n                  username={this.state.currentUser.username}\n                  season={this.state.currentSeason} />\n              }\n            />\n            <Route\n              path={Routes.createAllGroup}\n              render={() =>\n                <CreateAllGroup />}\n            />\n            <Route\n              path={Routes.updateWeek}\n              render={() =>\n                <UpdateWeek />}\n            />\n            <Route\n              render={() =>\n                <FourOFour />\n              } />\n          </Switch>\n        </Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Firebase, { FirebaseContext } from './componenets/Firebase';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( \n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById('root')\n)","module.exports = __webpack_public_path__ + \"static/media/EliminatorSignInLogo.f0543dd4.png\";"],"sourceRoot":""}